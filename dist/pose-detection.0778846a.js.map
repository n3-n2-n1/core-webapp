{"version":3,"sources":["../src/constants.ts","../../../src/shared/calculators/mask_util.ts","../../src/blazepose_mediapipe/constants.ts","../../src/blazepose_mediapipe/detector_utils.ts","../../src/blazepose_mediapipe/detector.ts","../../../../../tfjs-converter/src/flags.ts","../../../../../../tfjs-converter/src/data/compiled_api.ts","../../../../../../../tfjs-converter/src/operations/custom_op/register.ts","../../../../../../../tfjs-converter/src/operations/executors/utils.ts","../../../../../../../tfjs-converter/src/operations/op_list/arithmetic.ts","../../../../../../../tfjs-converter/src/operations/op_list/basic_math.ts","../../../../../../../tfjs-converter/src/operations/op_list/control.ts","../../../../../../../tfjs-converter/src/operations/op_list/convolution.ts","../../../../../../../tfjs-converter/src/operations/op_list/creation.ts","../../../../../../../tfjs-converter/src/operations/op_list/dynamic.ts","../../../../../../../tfjs-converter/src/operations/op_list/evaluation.ts","../../../../../../../tfjs-converter/src/operations/op_list/graph.ts","../../../../../../../tfjs-converter/src/operations/op_list/hash_table.ts","../../../../../../../tfjs-converter/src/operations/op_list/image.ts","../../../../../../../tfjs-converter/src/operations/op_list/logical.ts","../../../../../../../tfjs-converter/src/operations/op_list/matrices.ts","../../../../../../../tfjs-converter/src/operations/op_list/normalization.ts","../../../../../../../tfjs-converter/src/operations/op_list/reduction.ts","../../../../../../../tfjs-converter/src/operations/op_list/slice_join.ts","../../../../../../../tfjs-converter/src/operations/op_list/sparse.ts","../../../../../../../tfjs-converter/src/operations/op_list/spectral.ts","../../../../../../../tfjs-converter/src/operations/op_list/string.ts","../../../../../../../tfjs-converter/src/operations/op_list/transformation.ts","../../../../../../tfjs-converter/src/operations/operation_mapper.ts","../../../../../../../tfjs-converter/src/operations/custom_op/node_value_impl.ts","../../../../../../tfjs-core/src/ops/ops_for_converter.ts","../../../../../../../tfjs-converter/src/operations/executors/arithmetic_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/basic_math_executor.ts","../../../../../../tfjs-converter/src/executor/tensor_utils.ts","../../../../../../tfjs-converter/src/executor/tensor_array.ts","../../../../../../tfjs-converter/src/executor/tensor_list.ts","../../../../../../../tfjs-converter/src/operations/executors/control_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/convolution_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/creation_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/dynamic_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/evaluation_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/graph_executor.ts","../../../../../../tfjs-converter/src/executor/hash_table.ts","../../../../../../../tfjs-converter/src/operations/executors/hash_table_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/image_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/logical_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/matrices_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/normalization_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/ragged_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/reduction_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/slice_join_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/sparse_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/spectral_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/string_executor.ts","../../../../../../../tfjs-converter/src/operations/executors/transformation_executor.ts","../../../../../../tfjs-converter/src/operations/operation_executor.ts","../../../../../../tfjs-converter/src/executor/execution_context.ts","../../../../../../tfjs-converter/src/executor/model_analysis.ts","../../../../../../tfjs-converter/src/executor/graph_executor.ts","../../../../../../tfjs-converter/src/executor/resource_manager.ts","../../../../../../tfjs-converter/src/executor/graph_model.ts","../../../../../tfjs-converter/src/version.ts","../../../../../tfjs-converter/src/index.ts","../../../src/shared/calculators/image_utils.ts","../../../src/shared/calculators/detection_to_rect.ts","../../../src/shared/calculators/calculate_alignment_points_rects.ts","../../../src/shared/calculators/calculate_inverse_matrix.ts","../../../src/shared/calculators/calculate_landmark_projection.ts","../../../src/shared/calculators/calculate_score_copy.ts","../../../src/shared/calculators/calculate_world_landmark_projection.ts","../../../src/shared/calculators/constants.ts","../../../src/shared/calculators/get_rotated_sub_rect_to_rect_transformation_matrix.ts","../../../src/shared/calculators/shift_image_value.ts","../../../src/shared/calculators/convert_image_to_tensor.ts","../../../src/shared/calculators/create_ssd_anchors.ts","../../../src/shared/calculators/split_detection_result.ts","../../../src/shared/calculators/detector_result.ts","../../../src/shared/calculators/is_video.ts","../../../src/shared/calculators/landmarks_to_detection.ts","../../../src/shared/calculators/non_max_suppression.ts","../../../src/shared/calculators/normalized_keypoints_to_keypoints.ts","../../../src/shared/calculators/refine_landmarks_from_heatmap.ts","../../../src/shared/calculators/remove_detection_letterbox.ts","../../../src/shared/calculators/remove_landmark_letterbox.ts","../../../src/shared/calculators/segmentation_smoothing.ts","../../../src/shared/calculators/tensors_to_detections.ts","../../../src/shared/calculators/sigmoid.ts","../../../src/shared/calculators/tensors_to_landmarks.ts","../../../src/shared/calculators/tensors_to_segmentation.ts","../../../src/shared/calculators/transform_rect.ts","../../../src/shared/calculators/get_object_scale.ts","../../../src/shared/calculators/keypoints_to_normalized_keypoints.ts","../../../src/shared/filters/low_pass_filter.ts","../../../src/shared/filters/one_euro_filter.ts","../../../src/shared/filters/keypoints_one_euro_filter.ts","../../../src/shared/filters/relative_velocity_filter.ts","../../../src/shared/filters/keypoints_velocity_filter.ts","../../../src/shared/filters/keypoints_smoothing.ts","../../../src/shared/filters/visibility_smoothing.ts","../../src/blazepose_tfjs/constants.ts","../../src/blazepose_tfjs/detector_utils.ts","../../src/blazepose_tfjs/detector.ts","../../src/calculators/tracker_utils.ts","../../src/calculators/tracker.ts","../../src/calculators/bounding_box_tracker.ts","../../src/calculators/keypoint_tracker.ts","../../src/calculators/types.ts","../src/types.ts","../src/util.ts","../../src/movenet/constants.ts","../../src/movenet/crop_utils.ts","../../src/movenet/detector_utils.ts","../../src/movenet/detector.ts","../../src/posenet/constants.ts","../../../src/posenet/calculators/max_heap.ts","../../../src/posenet/calculators/build_part_with_score_queue.ts","../../../src/posenet/calculators/decode_multiple_poses_util.ts","../../../src/posenet/calculators/decode_multiple_poses.ts","../../../src/posenet/ops/webgpu_util.ts","../../../src/posenet/ops/get_points_confidence_webgpu.ts","../../../src/posenet/ops/get_points_confidence.ts","../../../src/posenet/ops/get_offset_vectors_webgpu.ts","../../../src/posenet/ops/get_offset_vectors.ts","../../../src/posenet/calculators/decode_single_pose_util.ts","../../../src/posenet/calculators/decode_single_pose.ts","../../../src/posenet/calculators/flip_poses.ts","../../../src/posenet/calculators/scale_poses.ts","../../src/posenet/detector_utils.ts","../../src/posenet/load_utils.ts","../../src/posenet/detector.ts","../src/create_detector.ts","../src/index.ts"],"names":[],"mappings":"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","file":"pose-detection.0778846a.js","sourceRoot":"..","sourcesContent":[null,null,null,null,null,"/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {env} from '@tensorflow/tfjs-core';\n\nconst ENV = env();\n\n/** Whether to keep intermediate tensors. */\nENV.registerFlag('KEEP_INTERMEDIATE_TENSORS', () => false, debugValue => {\n  if (debugValue) {\n    console.warn(\n        'Keep intermediate tensors is ON. This will print the values of all ' +\n        'intermediate tensors during model inference. Not all models ' +\n        'support this mode. For details, check e2e/benchmarks/ ' +\n        'model_config.js. This significantly impacts performance.');\n  }\n});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/* tslint:disable */\n\n/** Properties of an Any. */\nexport declare interface IAny {\n  /** Any typeUrl */\n  typeUrl?: (string|null);\n\n  /** Any value */\n  value?: (Uint8Array|null);\n}\n\n/** DataType enum. */\nexport enum DataType {\n  // Not a legal value for DataType.  Used to indicate a DataType field\n  // has not been set.\n  DT_INVALID = 0,\n\n  // Data types that all computation devices are expected to be\n  // capable to support.\n  DT_FLOAT = 1,\n  DT_DOUBLE = 2,\n  DT_INT32 = 3,\n  DT_UINT8 = 4,\n  DT_INT16 = 5,\n  DT_INT8 = 6,\n  DT_STRING = 7,\n  DT_COMPLEX64 = 8,  // Single-precision complex\n  DT_INT64 = 9,\n  DT_BOOL = 10,\n  DT_QINT8 = 11,     // Quantized int8\n  DT_QUINT8 = 12,    // Quantized uint8\n  DT_QINT32 = 13,    // Quantized int32\n  DT_BFLOAT16 = 14,  // Float32 truncated to 16 bits.  Only for cast ops.\n  DT_QINT16 = 15,    // Quantized int16\n  DT_QUINT16 = 16,   // Quantized uint16\n  DT_UINT16 = 17,\n  DT_COMPLEX128 = 18,  // Double-precision complex\n  DT_HALF = 19,\n  DT_RESOURCE = 20,\n  DT_VARIANT = 21,  // Arbitrary C++ data types\n  DT_UINT32 = 22,\n  DT_UINT64 = 23,\n\n  // Do not use!  These are only for parameters.  Every enum above\n  // should have a corresponding value below (verified by types_test).\n  DT_FLOAT_REF = 101,\n  DT_DOUBLE_REF = 102,\n  DT_INT32_REF = 103,\n  DT_UINT8_REF = 104,\n  DT_INT16_REF = 105,\n  DT_INT8_REF = 106,\n  DT_STRING_REF = 107,\n  DT_COMPLEX64_REF = 108,\n  DT_INT64_REF = 109,\n  DT_BOOL_REF = 110,\n  DT_QINT8_REF = 111,\n  DT_QUINT8_REF = 112,\n  DT_QINT32_REF = 113,\n  DT_BFLOAT16_REF = 114,\n  DT_QINT16_REF = 115,\n  DT_QUINT16_REF = 116,\n  DT_UINT16_REF = 117,\n  DT_COMPLEX128_REF = 118,\n  DT_HALF_REF = 119,\n  DT_RESOURCE_REF = 120,\n  DT_VARIANT_REF = 121,\n  DT_UINT32_REF = 122,\n  DT_UINT64_REF = 123,\n}\n\n/** Properties of a TensorShape. */\nexport declare interface ITensorShape {\n  /** TensorShape dim */\n  dim?: (TensorShape.IDim[]|null);\n\n  /** TensorShape unknownRank */\n  unknownRank?: (boolean|null);\n}\n\nexport namespace TensorShape {\n  /** Properties of a Dim. */\n  export declare interface IDim {\n    /** Dim size */\n    size?: (number|string|null);\n\n    /** Dim name */\n    name?: (string|null);\n  }\n}\n\n/** Properties of a Tensor. */\nexport declare interface ITensor {\n  /** Tensor dtype */\n  dtype?: (DataType|null);\n\n  /** Tensor tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Tensor versionNumber */\n  versionNumber?: (number|null);\n\n  /** Tensor tensorContent */\n  tensorContent?: (Uint8Array|null);\n\n  /** Tensor floatVal */\n  floatVal?: (number[]|null);\n\n  /** Tensor doubleVal */\n  doubleVal?: (number[]|null);\n\n  /** Tensor intVal */\n  intVal?: (number[]|null);\n\n  /** Tensor stringVal */\n  stringVal?: (Uint8Array[]|null);\n\n  /** Tensor scomplexVal */\n  scomplexVal?: (number[]|null);\n\n  /** Tensor int64Val */\n  int64Val?: ((number | string)[]|null);\n\n  /** Tensor boolVal */\n  boolVal?: (boolean[]|null);\n\n  /** Tensor uint32Val */\n  uint32Val?: (number[]|null);\n\n  /** Tensor uint64Val */\n  uint64Val?: ((number | string)[]|null);\n}\n\n/** Properties of an AttrValue. */\nexport declare interface IAttrValue {\n  /** AttrValue list */\n  list?: (AttrValue.IListValue|null);\n\n  /** AttrValue s */\n  s?: (string|null);\n\n  /** AttrValue i */\n  i?: (number|string|null);\n\n  /** AttrValue f */\n  f?: (number|null);\n\n  /** AttrValue b */\n  b?: (boolean|null);\n\n  /** AttrValue type */\n  type?: (DataType|null);\n\n  /** AttrValue shape */\n  shape?: (ITensorShape|null);\n\n  /** AttrValue tensor */\n  tensor?: (ITensor|null);\n\n  /** AttrValue placeholder */\n  placeholder?: (string|null);\n\n  /** AttrValue func */\n  func?: (INameAttrList|null);\n}\n\nexport namespace AttrValue {\n  /** Properties of a ListValue. */\n  export declare interface IListValue {\n    /** ListValue s */\n    s?: (string[]|null);\n\n    /** ListValue i */\n    i?: ((number | string)[]|null);\n\n    /** ListValue f */\n    f?: (number[]|null);\n\n    /** ListValue b */\n    b?: (boolean[]|null);\n\n    /** ListValue type */\n    type?: (DataType[]|null);\n\n    /** ListValue shape */\n    shape?: (ITensorShape[]|null);\n\n    /** ListValue tensor */\n    tensor?: (ITensor[]|null);\n\n    /** ListValue func */\n    func?: (INameAttrList[]|null);\n  }\n}\n\n/** Properties of a NameAttrList. */\nexport declare interface INameAttrList {\n  /** NameAttrList name */\n  name?: (string|null);\n\n  /** NameAttrList attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a NodeDef. */\nexport declare interface INodeDef {\n  /** NodeDef name */\n  name?: (string|null);\n\n  /** NodeDef op */\n  op?: (string|null);\n\n  /** NodeDef input */\n  input?: (string[]|null);\n\n  /** NodeDef device */\n  device?: (string|null);\n\n  /** NodeDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a VersionDef. */\nexport declare interface IVersionDef {\n  /** VersionDef producer */\n  producer?: (number|null);\n\n  /** VersionDef minConsumer */\n  minConsumer?: (number|null);\n\n  /** VersionDef badConsumers */\n  badConsumers?: (number[]|null);\n}\n\n/** Properties of a GraphDef. */\nexport declare interface IGraphDef {\n  /** GraphDef node */\n  node?: (INodeDef[]|null);\n\n  /** GraphDef versions */\n  versions?: (IVersionDef|null);\n\n  /** GraphDef library */\n  library?: (IFunctionDefLibrary|null);\n}\n\n/** Properties of a CollectionDef. */\nexport declare interface ICollectionDef {\n  /** CollectionDef nodeList */\n  nodeList?: (CollectionDef.INodeList|null);\n\n  /** CollectionDef bytesList */\n  bytesList?: (CollectionDef.IBytesList|null);\n\n  /** CollectionDef int64List */\n  int64List?: (CollectionDef.IInt64List|null);\n\n  /** CollectionDef floatList */\n  floatList?: (CollectionDef.IFloatList|null);\n\n  /** CollectionDef anyList */\n  anyList?: (CollectionDef.IAnyList|null);\n}\n\nexport namespace CollectionDef {\n  /** Properties of a NodeList. */\n  export declare interface INodeList {\n    /** NodeList value */\n    value?: (string[]|null);\n  }\n\n  /** Properties of a BytesList. */\n  export declare interface IBytesList {\n    /** BytesList value */\n    value?: (Uint8Array[]|null);\n  }\n\n  /** Properties of an Int64List. */\n  export declare interface IInt64List {\n    /** Int64List value */\n    value?: ((number | string)[]|null);\n  }\n\n  /** Properties of a FloatList. */\n  export declare interface IFloatList {\n    /** FloatList value */\n    value?: (number[]|null);\n  }\n\n  /** Properties of an AnyList. */\n  export declare interface IAnyList {\n    /** AnyList value */\n    value?: (IAny[]|null);\n  }\n}\n\n/** Properties of a SaverDef. */\nexport declare interface ISaverDef {\n  /** SaverDef filenameTensorName */\n  filenameTensorName?: (string|null);\n\n  /** SaverDef saveTensorName */\n  saveTensorName?: (string|null);\n\n  /** SaverDef restoreOpName */\n  restoreOpName?: (string|null);\n\n  /** SaverDef maxToKeep */\n  maxToKeep?: (number|null);\n\n  /** SaverDef sharded */\n  sharded?: (boolean|null);\n\n  /** SaverDef keepCheckpointEveryNHours */\n  keepCheckpointEveryNHours?: (number|null);\n\n  /** SaverDef version */\n  version?: (SaverDef.CheckpointFormatVersion|null);\n}\n\nexport namespace SaverDef {\n  /** CheckpointFormatVersion enum. */\n  export enum CheckpointFormatVersion {'LEGACY' = 0, 'V1' = 1, 'V2' = 2}\n}\n\n/** Properties of a TensorInfo. */\nexport declare interface ITensorInfo {\n  /** TensorInfo name */\n  name?: (string|null);\n\n  /** TensorInfo cooSparse */\n  cooSparse?: (TensorInfo.ICooSparse|null);\n\n  /** TensorInfo dtype */\n  dtype?: (DataType|string|null);\n\n  /** TensorInfo tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Resource id tensor was originally assigned to.  */\n  resourceId?: (number|null);\n}\n\nexport namespace TensorInfo {\n  /** Properties of a CooSparse. */\n  export declare interface ICooSparse {\n    /** CooSparse valuesTensorName */\n    valuesTensorName?: (string|null);\n\n    /** CooSparse indicesTensorName */\n    indicesTensorName?: (string|null);\n\n    /** CooSparse denseShapeTensorName */\n    denseShapeTensorName?: (string|null);\n  }\n}\n\n/** Properties of a SignatureDef. */\nexport declare interface ISignatureDef {\n  /** SignatureDef inputs */\n  inputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef outputs */\n  outputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef methodName */\n  methodName?: (string|null);\n}\n\n/** Properties of an AssetFileDef. */\nexport declare interface IAssetFileDef {\n  /** AssetFileDef tensorInfo */\n  tensorInfo?: (ITensorInfo|null);\n\n  /** AssetFileDef filename */\n  filename?: (string|null);\n}\n\n/** Properties of an OpDef. */\nexport declare interface IOpDef {\n  /** OpDef name */\n  name?: (string|null);\n\n  /** OpDef inputArg */\n  inputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef outputArg */\n  outputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef attr */\n  attr?: (OpDef.IAttrDef[]|null);\n\n  /** OpDef deprecation */\n  deprecation?: (OpDef.IOpDeprecation|null);\n\n  /** OpDef summary */\n  summary?: (string|null);\n\n  /** OpDef description */\n  description?: (string|null);\n\n  /** OpDef isCommutative */\n  isCommutative?: (boolean|null);\n\n  /** OpDef isAggregate */\n  isAggregate?: (boolean|null);\n\n  /** OpDef isStateful */\n  isStateful?: (boolean|null);\n\n  /** OpDef allowsUninitializedInput */\n  allowsUninitializedInput?: (boolean|null);\n}\n\nexport namespace OpDef {\n  /** Properties of an ArgDef. */\n  export declare interface IArgDef {\n    /** ArgDef name */\n    name?: (string|null);\n\n    /** ArgDef description */\n    description?: (string|null);\n\n    /** ArgDef type */\n    type?: (DataType|null);\n\n    /** ArgDef typeAttr */\n    typeAttr?: (string|null);\n\n    /** ArgDef numberAttr */\n    numberAttr?: (string|null);\n\n    /** ArgDef typeListAttr */\n    typeListAttr?: (string|null);\n\n    /** ArgDef isRef */\n    isRef?: (boolean|null);\n  }\n\n  /** Properties of an AttrDef. */\n  export declare interface IAttrDef {\n    /** AttrDef name */\n    name?: (string|null);\n\n    /** AttrDef type */\n    type?: (string|null);\n\n    /** AttrDef defaultValue */\n    defaultValue?: (IAttrValue|null);\n\n    /** AttrDef description */\n    description?: (string|null);\n\n    /** AttrDef hasMinimum */\n    hasMinimum?: (boolean|null);\n\n    /** AttrDef minimum */\n    minimum?: (number|string|null);\n\n    /** AttrDef allowedValues */\n    allowedValues?: (IAttrValue|null);\n  }\n\n  /** Properties of an OpDeprecation. */\n  export declare interface IOpDeprecation {\n    /** OpDeprecation version */\n    version?: (number|null);\n\n    /** OpDeprecation explanation */\n    explanation?: (string|null);\n  }\n}\n\n/** Properties of an OpList. */\nexport declare interface IOpList {\n  /** OpList op */\n  op?: (IOpDef[]|null);\n}\n\n/** Properties of a MetaGraphDef. */\nexport declare interface IMetaGraphDef {\n  /** MetaGraphDef metaInfoDef */\n  metaInfoDef?: (MetaGraphDef.IMetaInfoDef|null);\n\n  /** MetaGraphDef graphDef */\n  graphDef?: (IGraphDef|null);\n\n  /** MetaGraphDef saverDef */\n  saverDef?: (ISaverDef|null);\n\n  /** MetaGraphDef collectionDef */\n  collectionDef?: ({[k: string]: ICollectionDef}|null);\n\n  /** MetaGraphDef signatureDef */\n  signatureDef?: ({[k: string]: ISignatureDef}|null);\n\n  /** MetaGraphDef assetFileDef */\n  assetFileDef?: (IAssetFileDef[]|null);\n}\n\nexport namespace MetaGraphDef {\n  /** Properties of a MetaInfoDef. */\n  export declare interface IMetaInfoDef {\n    /** MetaInfoDef metaGraphVersion */\n    metaGraphVersion?: (string|null);\n\n    /** MetaInfoDef strippedOpList */\n    strippedOpList?: (IOpList|null);\n\n    /** MetaInfoDef anyInfo */\n    anyInfo?: (IAny|null);\n\n    /** MetaInfoDef tags */\n    tags?: (string[]|null);\n\n    /** MetaInfoDef tensorflowVersion */\n    tensorflowVersion?: (string|null);\n\n    /** MetaInfoDef tensorflowGitVersion */\n    tensorflowGitVersion?: (string|null);\n  }\n}\n\n/** Properties of a SavedModel. */\nexport declare interface ISavedModel {\n  /** SavedModel savedModelSchemaVersion */\n  savedModelSchemaVersion?: (number|string|null);\n\n  /** SavedModel metaGraphs */\n  metaGraphs?: (IMetaGraphDef[]|null);\n}\n\n/** Properties of a FunctionDefLibrary. */\nexport declare interface IFunctionDefLibrary {\n  /** FunctionDefLibrary function */\n  'function'?: (IFunctionDef[]|null);\n\n  /** FunctionDefLibrary gradient */\n  gradient?: (IGradientDef[]|null);\n}\n\n/** Properties of a FunctionDef. */\nexport declare interface IFunctionDef {\n  /** FunctionDef signature */\n  signature?: (IOpDef|null);\n\n  /** FunctionDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n\n  /** FunctionDef nodeDef */\n  nodeDef?: (INodeDef[]|null);\n\n  /** FunctionDef ret */\n  ret?: ({[k: string]: string}|null);\n}\n\n/** Properties of a GradientDef. */\nexport declare interface IGradientDef {\n  /** GradientDef functionName */\n  functionName?: (string|null);\n\n  /** GradientDef gradientFunc */\n  gradientFunc?: (string|null);\n}\n","\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpExecutor, OpMapper} from '../types';\n\nconst CUSTOM_OPS: {[key: string]: OpMapper} = {};\n\n/**\n * Register an Op for graph model executor. This allows you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object are based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function registerOp(name: string, opFunc: OpExecutor) {\n  const opMapper: OpMapper = {\n    tfOpName: name,\n    category: 'custom',\n    inputs: [],\n    attrs: [],\n    customExecutor: opFunc\n  };\n\n  CUSTOM_OPS[name] = opMapper;\n}\n\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function getRegisteredOp(name: string): OpMapper {\n  return CUSTOM_OPS[name];\n}\n\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n *\n * @doc {heading: 'Models', subheading: 'Op Registry'}\n */\nexport function deregisterOp(name: string) {\n  delete CUSTOM_OPS[name];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {clone, Tensor, util} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {ResourceManager} from '../../executor/resource_manager';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext, resourceManager?: ResourceManager): ValueType {\n  const inputParam = node.inputParams[paramName];\n  if (inputParam && inputParam.inputIndexStart !== undefined) {\n    const start = inputParam.inputIndexStart;\n    const end = inputParam.inputIndexEnd === 0 ?\n        undefined :\n        (inputParam.inputIndexEnd === undefined ? start + 1 :\n                                                  inputParam.inputIndexEnd);\n    const shiftedStart = start < 0 ? node.inputNames.length + start : start;\n    if (inputParam.type === 'tensor') {\n      return getTensor(\n          node.inputNames[shiftedStart], tensorMap, context, resourceManager);\n    }\n    if (inputParam.type === 'tensors') {\n      // TODO(mattSoulanille): This filters out NoOp nodes during execution, but\n      // these should really never be in the execution graph in the first place.\n      // They're necessary for ordering the graph, but should not be visible\n      // during execution. Perhaps have different sets of children, one for\n      // control dependencies and another for real dependencies.\n      const inputs = node.inputs.slice(start, end);\n      const inputNames = node.inputNames.slice(start, end)\n        .filter((_name, index) => inputs[index]?.op !== 'NoOp');\n\n      return inputNames.map(\n          name => getTensor(name, tensorMap, context, resourceManager));\n    }\n    const tensor = getTensor(\n        node.inputNames[shiftedStart], tensorMap, context, resourceManager);\n    const data = tensor.dataSync();\n    return inputParam.type === 'number' ?\n        data[0] :\n        util.toNestedArray(tensor.shape, data);\n  }\n  const attrParam = node.attrParams[paramName];\n  return attrParam && attrParam.value;\n}\n\n/**\n * Retrieve the tensor from tensorsMap based on input name.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager?: ResourceManager): Tensor {\n  const [nodeName, index] = parseNodeName(name, context);\n\n  if (resourceManager != null) {\n    const tensor = resourceManager.getHashTableHandleByName(nodeName);\n    if (tensor != null) {\n      return tensor;\n    }\n  }\n\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContext(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): Tensor[] {\n  return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n\n/**\n * Returns the node name, outputName and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n * If the input name contains output name i.e. StringSplit:indices:0, it will\n * return ['StringSplit', 0, 'indices'].\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number, string] {\n  const [nodeName, index, outputName] = parseNodeName(inputName, context);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index, outputName\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(\n    name: string, context?: ExecutionContext): [string, number, string?] {\n  if (name === '') {\n    return ['', 0, undefined];\n  }\n\n  const isCacheEnabled = context != null && context.parseNodeNameCache != null;\n  if (isCacheEnabled) {\n    const cachedResult = context.parseNodeNameCache.get(name);\n    if (cachedResult != null) {\n      return cachedResult;\n    }\n  }\n  const parts = name.split(':');\n  let result: [string, number, string?];\n  if (parts.length === 1) {\n    result = [name, 0, undefined];\n  } else {\n    const nodeName = parts[0];\n    const outputName = parts.length === 3 ? parts[1] : undefined;\n    const index = Number(parts[parts.length - 1]);\n    result = [nodeName, index, outputName];\n  }\n  if (isCacheEnabled) {\n    context.parseNodeNameCache.set(name, result);\n  }\n  return result;\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\nexport function getPadding(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  let pad = getParamValue('pad', node, tensorMap, context);\n  if (pad === 'explicit') {\n    // This is 1d array, we need to convert it to 2d array\n    pad = getParamValue('explicitPaddings', node, tensorMap, context);\n    const explicitPadding: [\n      [number, number], [number, number], [number, number], [number, number]\n    ] = [[0, 0], [0, 0], [0, 0], [0, 0]];\n    for (let i = 0; i < 4; i++) {\n      explicitPadding[i][0] = (pad as number[])[i * 2];\n      explicitPadding[i][1] = (pad as number[])[i * 2 + 1];\n    }\n    return explicitPadding;\n  }\n  return pad;\n}\n\n/**\n *  Reuse the tensor if it is marked as keep, otherwise clone the tensor to\n *  avoid disposal. This is important for TensorArray and TensorList ops, since\n *  internally they use a tensor as the id for TensorArray and TensorList, and\n * to simplify lookup, they also use Tensor.id as the key to the internal map.\n * These id tensors have been marked as kept in the backend, we need avoid clone\n * them in order to create new Tensor.id.\n * @param tensor\n */\nexport function cloneTensor(tensor: Tensor): Tensor {\n  return tensor.kept ? tensor : clone(tensor);\n}\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Add',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'AddV2',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DivNoNan',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'category': 'arithmetic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Abs',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atan',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atan2',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'y',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'clipValueMin',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'clipValueMax',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Complex',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'real',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'imag',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ComplexAbs',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Imag',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Real',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'outputType',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prelu',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'alpha',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LeakyRelu',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IsNan',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IsFinite',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IsInf',\n    'category': 'basic_math',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'EmptyTensorList',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 1,\n        'name': 'maxNumElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'pred',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'pred',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'frame_name',\n        'name': 'frameName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'is_constant',\n        'name': 'isConstant',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'size',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'dynamic_size',\n        'name': 'dynamicSize',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'clear_after_read',\n        'name': 'clearAfterRead',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'tensor_array_name',\n        'name': 'name',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'lengths',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StatelessIf',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'cond',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'then_branch',\n        'name': 'thenBranch',\n        'type': 'func'\n      },\n      {\n        'tfName': 'else_branch',\n        'name': 'elseBranch',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'If',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'cond',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'then_branch',\n        'name': 'thenBranch',\n        'type': 'func'\n      },\n      {\n        'tfName': 'else_branch',\n        'name': 'elseBranch',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StatelessWhile',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'cond',\n        'name': 'cond',\n        'type': 'func'\n      },\n      {\n        'tfName': 'body',\n        'name': 'body',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'While',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'cond',\n        'name': 'cond',\n        'type': 'func'\n      },\n      {\n        'tfName': 'body',\n        'name': 'body',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatter',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatterV2',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 3,\n        'name': 'numElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListGather',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListGetItem',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSetItem',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListReserve',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 1,\n        'name': 'numElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListFromTensor',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListStack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'num_elements',\n        'name': 'numElements',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSplit',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 2,\n        'name': 'lengths',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListConcat',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListConcatV2',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPopBack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPushBack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListLength',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListResize',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'AvgPool',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'ksize',\n        'name': 'kernelSize',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'ksize',\n        'name': 'kernelSize',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': [],\n        'notSupported': true\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MaxPoolWithArgmax',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'ksize',\n        'name': 'kernelSize',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'include_batch_in_index',\n        'name': 'includeBatchInIndex',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'AvgPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'ksize',\n        'name': 'kernelSize',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool3D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'ksize',\n        'name': 'kernelSize',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'stride',\n        'name': 'stride',\n        'type': 'number'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'dilation',\n        'name': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'useCudnnOnGpu',\n        'name': 'useCudnnOnGpu',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': '_FusedConv2D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_args',\n        'name': 'numArgs',\n        'type': 'number'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'use_cudnn_on_gpu',\n        'name': 'useCudnnOnGpu',\n        'type': 'bool',\n        'defaultValue': true\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [\n          1,\n          1,\n          1,\n          1\n        ]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n      {\n        'tfName': 'leakyrelu_alpha',\n        'name': 'leakyreluAlpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 2,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      },\n      {\n        'start': 0,\n        'name': 'outputShape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedDepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_args',\n        'name': 'numArgs',\n        'type': 'number'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]',\n        'defaultValue': [\n          1,\n          1,\n          1,\n          1\n        ]\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'explicit_paddings',\n        'name': 'explicitPaddings',\n        'type': 'number[]',\n        'defaultValue': []\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv3D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {\n        'tfName': 'dilations',\n        'name': 'dilations',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Dilation2D',\n    'category': 'convolution',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'filter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'strides',\n        'name': 'strides',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'rates',\n        'name': 'dilations',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'padding',\n        'name': 'pad',\n        'type': 'string'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Fill',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      },\n      {\n        'start': 1,\n        'name': 'value',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'start',\n        'type': 'number'\n      },\n      {\n        'start': 1,\n        'name': 'stop',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'num',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'depth',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'onValue',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'start': 3,\n        'name': 'offValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RandomStandardNormal',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'seed',\n        'name': 'seed',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'T',\n        'name': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'minval',\n        'name': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'maxval',\n        'name': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'seed',\n        'name': 'seed',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {\n        'tfName': 'T',\n        'name': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RandomUniformInt',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'minval',\n        'name': 'minval',\n        'type': 'number'\n      },\n      {\n        'tfName': 'maxval',\n        'name': 'maxval',\n        'type': 'number'\n      },\n      {\n        'tfName': 'seed',\n        'name': 'seed',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'start',\n        'type': 'number'\n      },\n      {\n        'start': 1,\n        'name': 'stop',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'step',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tidx',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TruncatedNormal',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'means',\n        'name': 'mean',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'stddev',\n        'name': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfName': 'seed',\n        'name': 'seed',\n        'type': 'number'\n      },\n      {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'T',\n        'name': 'T',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Multinomial',\n    'category': 'creation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'logits',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'numSamples',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'seed',\n        'name': 'seed',\n        'type': 'number'\n      },\n      {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'output_dtype',\n        'name': 'output_dtype',\n        'type': 'dtype'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scores',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'maxOutputSize',\n        'type': 'number'\n      },\n      {\n        'start': 3,\n        'name': 'iouThreshold',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scores',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'maxOutputSize',\n        'type': 'number'\n      },\n      {\n        'start': 3,\n        'name': 'iouThreshold',\n        'type': 'number'\n      },\n      {\n        'start': 4,\n        'name': 'scoreThreshold',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV4',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scores',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'maxOutputSize',\n        'type': 'number'\n      },\n      {\n        'start': 3,\n        'name': 'iouThreshold',\n        'type': 'number'\n      },\n      {\n        'start': 4,\n        'name': 'scoreThreshold',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'T_threshold',\n        'name': 'threshold',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'pad_to_max_output_size',\n        'name': 'padToMaxOutputSize',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV5',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scores',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'maxOutputSize',\n        'type': 'number'\n      },\n      {\n        'start': 3,\n        'name': 'iouThreshold',\n        'type': 'number'\n      },\n      {\n        'start': 4,\n        'name': 'scoreThreshold',\n        'type': 'number'\n      },\n      {\n        'start': 5,\n        'name': 'softNmsSigma',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'condition',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ListDiff',\n    'category': 'dynamic',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'y',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'LowerBound',\n    'category': 'evaluation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'sortedSequence',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TopKV2',\n    'category': 'evaluation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'k',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'sorted',\n        'name': 'sorted',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'UpperBound',\n    'category': 'evaluation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'sortedSequence',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Unique',\n    'category': 'evaluation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'UniqueV2',\n    'category': 'evaluation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'default',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'shape',\n        'name': 'shape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'category': 'graph',\n    'attrs': [\n      {\n        'tfName': 'shape',\n        'name': 'shape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Const',\n    'category': 'graph'\n  },\n  {\n    'tfOpName': 'Identity',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IdentityN',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'x',\n        'type': 'tensors'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Rank',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Size',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Shape',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'x',\n        'type': 'tensors'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Print',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'data',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'message',\n        'name': 'message',\n        'type': 'string'\n      },\n      {\n        'tfName': 'first_n',\n        'name': 'firstN',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfName': 'summarize',\n        'name': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NoOp',\n    'category': 'graph',\n    'inputs': []\n  },\n  {\n    'tfOpName': 'StopGradient',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'min',\n        'name': 'min',\n        'type': 'number'\n      },\n      {\n        'tfName': 'max',\n        'name': 'max',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'HashTable',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {\n        'tfName': 'shared_name',\n        'name': 'sharedName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'key_dtype',\n        'name': 'keyDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'value_dtype',\n        'name': 'valueDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'HashTableV2',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {\n        'tfName': 'shared_name',\n        'name': 'sharedName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'key_dtype',\n        'name': 'keyDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'value_dtype',\n        'name': 'valueDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImport',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImportV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFind',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFindV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSize',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSizeV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'InitializeTable',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'InitializeTableV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'image',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'boxInd',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'cropSize',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'method',\n        'name': 'method',\n        'type': 'string'\n      },\n      {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ImageProjectiveTransformV3',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'transforms',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'outputShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'fillValue',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'interpolation',\n        'name': 'interpolation',\n        'type': 'string'\n      },\n      {\n        'tfName': 'fill_mode',\n        'name': 'fillMode',\n        'type': 'string'\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Equal',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'condition',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SelectV2',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'condition',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BitwiseAnd',\n    'category': 'logical',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'y',\n        'type': 'tensor'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': '_FusedMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_args',\n        'name': 'numArgs',\n        'type': 'number'\n      },\n      {\n        'tfName': 'fused_ops',\n        'name': 'fusedOps',\n        'type': 'string[]',\n        'defaultValue': []\n      },\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.0001\n      },\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'leakyrelu_alpha',\n        'name': 'leakyreluAlpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MatMul',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMulV2',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'b',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'perm',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Einsum',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'equation',\n        'name': 'equation',\n        'type': 'string'\n      },\n      {\n        'tfName': 'N',\n        'name': 'n',\n        'type': 'number',\n        'defaultValue': 2\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MatrixBandPart',\n    'category': 'matrices',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'a',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'numLower',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'numUpper',\n        'type': 'tensor'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'EuclideanNorm',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool',\n        'defaultValue': false\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scale',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'offset',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'mean',\n        'type': 'tensor'\n      },\n      {\n        'start': 4,\n        'name': 'variance',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scale',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'offset',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'mean',\n        'type': 'tensor'\n      },\n      {\n        'start': 4,\n        'name': 'variance',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV3',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'scale',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'offset',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'mean',\n        'type': 'tensor'\n      },\n      {\n        'start': 4,\n        'name': 'variance',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'depth_radius',\n        'name': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {\n        'tfName': 'bias',\n        'name': 'bias',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {\n        'tfName': 'beta',\n        'name': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LogSoftmax',\n    'category': 'normalization',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Bincount',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'weights',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DenseBincount',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'weights',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'binary_output',\n        'name': 'binaryOutput',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Max',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mean',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Min',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sum',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'All',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Any',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cumprod',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'exclusive',\n        'name': 'exclusive',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'reverse',\n        'name': 'reverse',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cumsum',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'exclusive',\n        'name': 'exclusive',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'reverse',\n        'name': 'reverse',\n        'type': 'bool'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ConcatV2',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'end': -1,\n        'name': 'tensors',\n        'type': 'tensors'\n      },\n      {\n        'start': -1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'N',\n        'name': 'n',\n        'type': 'number',\n        'defaultValue': 2\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Concat',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 1,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      },\n      {\n        'start': 0,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'N',\n        'name': 'n',\n        'type': 'number',\n        'defaultValue': 2\n      }\n    ]\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'batch_dims',\n        'name': 'batchDims',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Gather',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'validate_indices',\n        'name': 'validateIndices',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'dims',\n        'type': 'bool[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'begin',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'begin',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'end',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'strides',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'begin_mask',\n        'name': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'end_mask',\n        'name': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'new_axis_mask',\n        'name': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'ellipsis_mask',\n        'name': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'shrink_axis_mask',\n        'name': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'num',\n        'name': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'reps',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'start': 1,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_split',\n        'name': 'numOrSizeSplits',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'numOrSizeSplits',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'axis',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ScatterNd',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'values',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'GatherNd',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'sparseIndices',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'outputShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'sparseValues',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'validate_indices',\n        'name': 'validateIndices',\n        'type': 'bool',\n        'defaultValue': false,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorScatterUpdate',\n    'category': 'slice_join',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'SparseFillEmptyRows',\n    'category': 'sparse',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'values',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'denseShape',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SparseReshape',\n    'category': 'sparse',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'inputIndices',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'inputShape',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'newShape',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentMean',\n    'category': 'sparse',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'segmentIds',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SparseSegmentSum',\n    'category': 'sparse',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'segmentIds',\n        'type': 'tensor'\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FFT',\n    'category': 'spectral',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IFFT',\n    'category': 'spectral',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'RFFT',\n    'category': 'spectral',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IRFFT',\n    'category': 'spectral',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'StaticRegexReplace',\n    'category': 'string',\n    'inputs': [\n      {\n      'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'pattern',\n        'name': 'pattern',\n        'type': 'string'\n      },\n      {\n        'tfName': 'rewrite',\n        'name': 'rewrite',\n        'type': 'string'\n      },\n      {\n        'tfName': 'replace_global',\n        'name': 'replaceGlobal',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StringNGrams',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'dataSplits',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'separator',\n        'name': 'separator',\n        'type': 'string'\n      },\n      {\n        'tfName': 'ngram_widths',\n        'name': 'nGramWidths',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'left_pad',\n        'name': 'leftPad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'right_pad',\n        'name': 'rightPad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'pad_width',\n        'name': 'padWidth',\n        'type': 'number'\n      },\n      {\n        'tfName': 'preserve_short_sequences',\n        'name': 'preserveShortSequences',\n        'type': 'bool'\n      }\n    ],\n    'outputs': [\n      'ngrams',\n      'ngrams_splits'\n    ]\n  },\n  {\n    'tfOpName': 'StringSplit',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'delimiter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'skip_empty',\n        'name': 'skipEmpty',\n        'type': 'bool'\n      }\n    ],\n    'outputs': [\n      'indices',\n      'values',\n      'shape'\n    ]\n  },\n  {\n    'tfOpName': 'StringToHashBucketFast',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_buckets',\n        'name': 'numBuckets',\n        'type': 'number'\n      }\n    ]\n  }\n]\n;\n","\n/**\n * @license\n * Copyright 2023 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Cast',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'SrcT',\n        'name': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'DstT',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'MirrorPad',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'padding',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'mode',\n        'name': 'mode',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pad',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'padding',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'constant_value',\n        'name': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'padding',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'EnsureShape',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'tfDeprecatedName': 'squeeze_dims',\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'blockShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'paddings',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'blockShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'crops',\n        'type': 'number[]'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthToSpace',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'block_size',\n        'name': 'blockSize',\n        'type': 'number'\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'BroadcastTo',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'shape',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': []\n  },\n  {\n    'tfOpName': 'BroadcastArgs',\n    'category': 'transformation',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 's0',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 's1',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': []\n  }\n]\n;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, env} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\n\nimport {getRegisteredOp} from './custom_op/register';\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as hashTable from './op_list/hash_table';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as sparse from './op_list/sparse';\nimport * as spectral from './op_list/spectral';\nimport * as string from './op_list/string';\nimport * as transformation from './op_list/transformation';\nimport {Graph, InputParamValue, Node, OpMapper, ParamValue} from './types';\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, graph, hashTable, image, logical, matrices, normalization,\n      reduction, sliceJoin, sparse, spectral, string, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat(...ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  // Converts the model inference graph from Tensorflow GraphDef to local\n  // representation for TensorFlow.js API\n  transformGraph(\n      graph: tensorflow.IGraphDef,\n      signature: tensorflow.ISignatureDef = {}): Graph {\n    const tfNodes = graph.node;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const initNodes: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (node.op.startsWith('Placeholder')) {\n        placeholders.push(map[node.name]);\n      } else if (node.op === 'Const') {\n        weights.push(map[node.name]);\n      } else if (node.input == null || node.input.length === 0) {\n        initNodes.push(map[node.name]);\n      }\n      return map;\n    }, {});\n\n    let inputs: Node[] = [];\n    const outputs: Node[] = [];\n    let inputNodeNameToKey: {[key: string]: string} = {};\n    let outputNodeNameToKey: {[key: string]: string} = {};\n    if (signature != null) {\n      inputNodeNameToKey = this.mapSignatureEntries(signature.inputs);\n      outputNodeNameToKey = this.mapSignatureEntries(signature.outputs);\n    }\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach((name, index) => {\n        const [nodeName, , outputName] = getNodeNameAndIndex(name);\n        const inputNode = nodes[nodeName];\n        if (inputNode.outputs != null) {\n          const outputIndex = inputNode.outputs.indexOf(outputName);\n          if (outputIndex !== -1) {\n            const inputName = `${nodeName}:${outputIndex}`;\n            // update the input name to use the mapped output index directly.\n            node.inputNames[index] = inputName;\n          }\n        }\n        node.inputs.push(inputNode);\n        inputNode.children.push(node);\n      });\n    });\n\n    // if signature has not outputs set, add any node that does not have\n    // outputs.\n    if (Object.keys(outputNodeNameToKey).length === 0) {\n      allNodes.forEach(key => {\n        const node = nodes[key];\n        if (node.children.length === 0) {\n          outputs.push(node);\n        }\n      });\n    } else {\n      Object.keys(outputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node != null) {\n          node.signatureKey = outputNodeNameToKey[name];\n          outputs.push(node);\n        }\n      });\n    }\n\n    if (Object.keys(inputNodeNameToKey).length > 0) {\n      Object.keys(inputNodeNameToKey).forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        const node = nodes[nodeName];\n        if (node) {\n          node.signatureKey = inputNodeNameToKey[name];\n          inputs.push(node);\n        }\n      });\n    } else {\n      inputs = placeholders;\n    }\n\n    let functions = {};\n    if (graph.library != null && graph.library.function != null) {\n      functions = graph.library.function.reduce((functions, func) => {\n        functions[func.signature.name] = this.mapFunction(func);\n        return functions;\n      }, {} as {[key: string]: Graph});\n    }\n\n    const result: Graph =\n        {nodes, inputs, outputs, weights, placeholders, signature, functions};\n\n    if (initNodes.length > 0) {\n      result.initNodes = initNodes;\n    }\n\n    return result;\n  }\n\n  private mapSignatureEntries(entries: {[k: string]: tensorflow.ITensorInfo}) {\n    return Object.keys(entries || {})\n        .reduce<{[key: string]: string}>((prev, curr) => {\n          prev[entries[curr].name] = curr;\n          return prev;\n        }, {});\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    // Unsupported ops will cause an error at run-time (not parse time), since\n    // they may not be used by the actual execution subgraph.\n    const mapper =\n        getRegisteredOp(node.op) || this.opMappers[node.op] || {} as OpMapper;\n    if (node.attr == null) {\n      node.attr = {};\n    }\n\n    const newNode: Node = {\n      name: node.name,\n      op: node.op,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.slice(1) : input),\n      inputs: [],\n      children: [],\n      inputParams: {},\n      attrParams: {},\n      rawAttrs: node.attr,\n      outputs: mapper.outputs\n    };\n\n    if (mapper.inputs != null) {\n      newNode.inputParams =\n          mapper.inputs.reduce<{[key: string]: InputParamValue}>(\n              (map, param) => {\n                map[param.name] = {\n                  type: param.type,\n                  inputIndexStart: param.start,\n                  inputIndexEnd: param.end\n                };\n                return map;\n              },\n              {});\n    }\n    if (mapper.attrs != null) {\n      newNode.attrParams =\n          mapper.attrs.reduce<{[key: string]: ParamValue}>((map, param) => {\n            const type = param.type;\n            let value = undefined;\n            switch (param.type) {\n              case 'string':\n                value = getStringParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'string[]':\n                value = getStringArrayParam(\n                    node.attr, param.tfName, param.defaultValue as string[]);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string[]);\n                }\n                break;\n              case 'number':\n                value = getNumberParam(\n                    node.attr, param.tfName,\n                    (param.defaultValue || 0) as number);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumberParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number);\n                }\n                break;\n              case 'number[]':\n                value = getNumericArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumericArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'bool':\n                value = getBoolParam(\n                    node.attr, param.tfName, param.defaultValue as boolean);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean);\n                }\n                break;\n              case 'bool[]':\n                value = getBoolArrayParam(\n                    node.attr, param.tfName, param.defaultValue as boolean[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean[]);\n                }\n                break;\n              case 'shape':\n                value = getTensorShapeParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'shape[]':\n                value = getTensorShapeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[][]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[][]);\n                }\n                break;\n              case 'dtype':\n                value = getDtypeParam(\n                    node.attr, param.tfName, param.defaultValue as DataType);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType);\n                }\n                break;\n              case 'dtype[]':\n                value = getDtypeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as DataType[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType[]);\n                }\n                break;\n              case 'func':\n                value = getFuncParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getFuncParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'tensor':\n              case 'tensors':\n                break;\n              default:\n                throw new Error(\n                    `Unsupported param type: ${param.type} for op: ${node.op}`);\n            }\n            map[param.name] = {value, type};\n            return map;\n          }, {});\n    }\n    return newNode;\n  }\n\n  // map the TFunctionDef to TFJS graph object\n  private mapFunction(functionDef: tensorflow.IFunctionDef): Graph {\n    const tfNodes = functionDef.nodeDef;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    let nodes: {[key: string]: Node} = {};\n    if (tfNodes != null) {\n      nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n        map[node.name] = this.mapNode(node);\n        if (node.op === 'Const') {\n          weights.push(map[node.name]);\n        }\n        return map;\n      }, {});\n    }\n    const inputs: Node[] = [];\n    const outputs: Node[] = [];\n\n    functionDef.signature.inputArg.forEach(arg => {\n      const [nodeName, ] = getNodeNameAndIndex(arg.name);\n      const node: Node = {\n        name: nodeName,\n        op: 'Placeholder',\n        inputs: [],\n        inputNames: [],\n        category: 'graph',\n        inputParams: {},\n        attrParams: {dtype: {value: parseDtypeParam(arg.type), type: 'dtype'}},\n        children: []\n      };\n      node.signatureKey = arg.name;\n      inputs.push(node);\n      nodes[nodeName] = node;\n    });\n\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach((name, index) => {\n        const [nodeName, , outputName] = getNodeNameAndIndex(name);\n        const inputNode = nodes[nodeName];\n        if (inputNode.outputs != null) {\n          const outputIndex = inputNode.outputs.indexOf(outputName);\n          if (outputIndex !== -1) {\n            const inputName = `${nodeName}:${outputIndex}`;\n            // update the input name to use the mapped output index directly.\n            node.inputNames[index] = inputName;\n          }\n        }\n        node.inputs.push(inputNode);\n        inputNode.children.push(node);\n      });\n    });\n\n    const returnNodeMap = functionDef.ret;\n\n    functionDef.signature.outputArg.forEach(output => {\n      const [nodeName, index] = getNodeNameAndIndex(returnNodeMap[output.name]);\n      const node = nodes[nodeName];\n      if (node != null) {\n        node.defaultOutput = index;\n        outputs.push(node);\n      }\n    });\n\n    const signature = this.mapArgsToSignature(functionDef);\n    return {nodes, inputs, outputs, weights, placeholders, signature};\n  }\n\n  private mapArgsToSignature(functionDef: tensorflow.IFunctionDef):\n      tensorflow.ISignatureDef {\n    return {\n      methodName: functionDef.signature.name,\n      inputs: functionDef.signature.inputArg.reduce(\n          (map, arg) => {\n            map[arg.name] = this.mapArgToTensorInfo(arg);\n            return map;\n          },\n          {} as {[key: string]: tensorflow.ITensorInfo}),\n      outputs: functionDef.signature.outputArg.reduce(\n          (map, arg) => {\n            map[arg.name] = this.mapArgToTensorInfo(arg, functionDef.ret);\n            return map;\n          },\n          {} as {[key: string]: tensorflow.ITensorInfo}),\n    };\n  }\n\n  private mapArgToTensorInfo(\n      arg: tensorflow.OpDef.IArgDef,\n      nameMap?: {[key: string]: string}): tensorflow.ITensorInfo {\n    let name = arg.name;\n    if (nameMap != null) {\n      name = nameMap[name];\n    }\n    return {name, dtype: arg.type};\n  }\n}\n\nexport function decodeBase64(text: string): string {\n  const global = env().global;\n  if (typeof global.atob !== 'undefined') {\n    return global.atob(text);\n  } else if (typeof Buffer !== 'undefined') {\n    return new Buffer(text, 'base64').toString();\n  } else {\n    throw new Error(\n        'Unable to decode base64 in this environment. ' +\n        'Missing built-in atob() or Buffer()');\n  }\n}\n\nexport function parseStringParam(s: []|string, keepCase: boolean): string {\n  const value =\n      Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n  return keepCase ? value : value.toLowerCase();\n}\n\nexport function getStringParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n    keepCase = false): string {\n  const param = attrs[name];\n  if (param != null) {\n    return parseStringParam(param.s, keepCase);\n  }\n  return def;\n}\n\nexport function getBoolParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean): boolean {\n  const param = attrs[name];\n  return param ? param.b : def;\n}\n\nexport function getNumberParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number): number {\n  const param = attrs[name] || {};\n  const value =\n      param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n  return (typeof value === 'number') ? value : parseInt(value, 10);\n}\n\nexport function parseDtypeParam(value: string|tensorflow.DataType): DataType {\n  if (typeof (value) === 'string') {\n    // tslint:disable-next-line:no-any\n    value = tensorflow.DataType[value as any];\n  }\n  switch (value) {\n    case tensorflow.DataType.DT_FLOAT:\n    case tensorflow.DataType.DT_HALF:\n      return 'float32';\n    case tensorflow.DataType.DT_INT32:\n    case tensorflow.DataType.DT_INT64:\n    case tensorflow.DataType.DT_INT8:\n    case tensorflow.DataType.DT_UINT8:\n      return 'int32';\n    case tensorflow.DataType.DT_BOOL:\n      return 'bool';\n    case tensorflow.DataType.DT_DOUBLE:\n      return 'float32';\n    case tensorflow.DataType.DT_STRING:\n      return 'string';\n    default:\n      // Unknown dtype error will happen at runtime (instead of parse time),\n      // since these nodes might not be used by the actual subgraph execution.\n      return null;\n  }\n}\n\nexport function getFuncParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: string): string {\n  const param = attrs[name];\n  if (param && param.func) {\n    return param.func.name;\n  }\n  return def;\n}\n\nexport function getDtypeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType): DataType {\n  const param = attrs[name];\n  if (param && param.type) {\n    return parseDtypeParam(param.type);\n  }\n  return def;\n}\n\nexport function getDtypeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType[]): DataType[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.type) {\n    return param.list.type.map(v => parseDtypeParam(v));\n  }\n  return def;\n}\n\nexport function parseTensorShapeParam(shape: tensorflow.ITensorShape): number[]|\n    undefined {\n  if (shape.unknownRank) {\n    return undefined;\n  }\n  if (shape.dim != null) {\n    return shape.dim.map(\n        dim =>\n            (typeof dim.size === 'number') ? dim.size : parseInt(dim.size, 10));\n  }\n  return [];\n}\n\nexport function getTensorShapeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def?: number[]): number[]|undefined {\n  const param = attrs[name];\n  if (param && param.shape) {\n    return parseTensorShapeParam(param.shape);\n  }\n  return def;\n}\n\nexport function getNumericArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[]): number[] {\n  const param = attrs[name];\n  if (param) {\n    return ((param.list.f && param.list.f.length ? param.list.f :\n                                                   param.list.i) ||\n            [])\n        .map(v => (typeof v === 'number') ? v : parseInt(v, 10));\n  }\n  return def;\n}\n\nexport function getStringArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string[],\n    keepCase = false): string[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.s) {\n    return param.list.s.map((v) => {\n      return parseStringParam(v, keepCase);\n    });\n  }\n  return def;\n}\n\nexport function getTensorShapeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[][]): number[][] {\n  const param = attrs[name];\n  if (param && param.list && param.list.shape) {\n    return param.list.shape.map((v) => {\n      return parseTensorShapeParam(v);\n    });\n  }\n  return def;\n}\n\nexport function getBoolArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean[]): boolean[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.b) {\n    return param.list.b;\n  }\n  return def;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {getTensor} from '../executors/utils';\nimport {getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam} from '../operation_mapper';\nimport {GraphNode, Node, ValueType} from '../types';\n\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl implements GraphNode {\n  public readonly inputs: Tensor[] = [];\n  public readonly attrs: {[key: string]: ValueType} = {};\n  constructor(\n      private node: Node, private tensorMap: NamedTensorsMap,\n      private context: ExecutionContext) {\n    this.inputs = node.inputNames.map(name => this.getInput(name));\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs)\n                       .reduce((attrs: {[key: string]: ValueType}, key) => {\n                         attrs[key] = this.getAttr(key);\n                         return attrs;\n                       }, {});\n    }\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getInput(name: string): Tensor {\n    return getTensor(name, this.tensorMap, this.context);\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getAttr(name: string, defaultValue?: ValueType): ValueType {\n    const value = this.node.rawAttrs[name];\n    if (value.tensor != null) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n    if (value.i != null || value.f != null) {\n      return getNumberParam(this.node.rawAttrs, name, defaultValue as number);\n    }\n    if (value.s != null) {\n      return getStringParam(this.node.rawAttrs, name, defaultValue as string);\n    }\n    if (value.b != null) {\n      return getBoolParam(this.node.rawAttrs, name, defaultValue as boolean);\n    }\n    if (value.shape != null) {\n      return getTensorShapeParam(\n          this.node.rawAttrs, name, defaultValue as number[]);\n    }\n    if (value.type != null) {\n      return getDtypeParam(this.node.rawAttrs, name, defaultValue as DataType);\n    }\n    if (value.list != null) {\n      if (value.list.i != null || value.list.f != null) {\n        return getNumericArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[]);\n      }\n      if (value.list.s != null) {\n        return getStringArrayParam(\n            this.node.rawAttrs, name, defaultValue as string[]);\n      }\n      if (value.list.shape != null) {\n        return getTensorShapeArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[][]);\n      }\n      if (value.list.b != null) {\n        return getBoolArrayParam(\n            this.node.rawAttrs, name, defaultValue as boolean[]);\n      }\n      if (value.list.type != null) {\n        return getDtypeArrayParam(\n            this.node.rawAttrs, name, defaultValue as DataType[]);\n      }\n    }\n\n    return defaultValue;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * This file exports ops used by the converters executors. By default it\n * re-exports all ops. In a custom build this is aliased to a file that will\n * only exports ops for a given model.json.\n */\nexport * from './ops';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'BiasAdd':\n        case 'AddV2':\n        case 'Add': {\n          return [ops.add(\n              (getParamValue('a', node, tensorMap, context) as Tensor),\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'AddN': {\n          return [ops.addN((\n              getParamValue('tensors', node, tensorMap, context) as Tensor[]))];\n        }\n        case 'FloorMod':\n        case 'Mod':\n          return [ops.mod(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        case 'Mul':\n          return [ops.mul(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        case 'RealDiv':\n        case 'Div': {\n          return [ops.div(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'DivNoNan': {\n          return [ops.divNoNan(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'FloorDiv': {\n          return [ops.floorDiv(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sub': {\n          return [ops.sub(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Minimum': {\n          return [ops.minimum(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Maximum': {\n          return [ops.maximum(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Pow': {\n          return [ops.pow(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'SquaredDifference': {\n          return [ops.squaredDifference(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Abs':\n        case 'ComplexAbs':\n          return [ops.abs(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Acos':\n          return [ops.acos(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Acosh':\n          return [ops.acosh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Asin':\n          return [ops.asin(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Asinh':\n          return [ops.asinh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Atan':\n          return [ops.atan(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Atan2':\n          return [ops.atan2(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('y', node, tensorMap, context) as Tensor)];\n        case 'Atanh':\n          return [ops.atanh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Ceil':\n          return [ops.ceil(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Complex':\n          return [ops.complex(\n              getParamValue('real', node, tensorMap, context) as Tensor,\n              getParamValue('imag', node, tensorMap, context) as Tensor)];\n        case 'Cos':\n          return [ops.cos(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Cosh':\n          return [ops.cosh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Elu':\n          return [ops.elu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Erf':\n          return [ops.erf(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Exp':\n          return [ops.exp(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Expm1': {\n          return [ops.expm1(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Floor':\n          return [ops.floor(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Log':\n          return [ops.log(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Log1p': {\n          return [ops.log1p(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Imag':\n          return [ops.imag(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n\n        case 'Neg':\n          return [ops.neg(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Reciprocal': {\n          return [ops.reciprocal(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Real':\n          return [ops.real(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Relu':\n          return [ops.relu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Round': {\n          return [ops.round(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Selu':\n          return [ops.selu(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sigmoid':\n          return [ops.sigmoid(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sin':\n          return [ops.sin(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Sign': {\n          return [ops.sign(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sinh': {\n          return [ops.sinh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Softplus': {\n          return [ops.softplus(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Sqrt': {\n          return [ops.sqrt(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Square': {\n          return [ops.square(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Tanh': {\n          return [ops.tanh(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'Tan':\n          return [ops.tan(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'ClipByValue':\n          return [ops.clipByValue(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('clipValueMin', node, tensorMap, context) as number,\n              getParamValue('clipValueMax', node, tensorMap, context) as\n                  number)];\n        case 'Relu6':\n          return [ops.relu6(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        case 'Rsqrt':\n          return [ops.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n        case 'LeakyRelu':\n          return [ops.leakyRelu(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('alpha', node, tensorMap, context) as number)];\n        case 'Prelu':\n          return [ops.prelu(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('alpha', node, tensorMap, context) as Tensor)];\n        case 'IsNan':\n          return [ops.isNaN(getTensor(node.inputNames[0], tensorMap, context))];\n        case 'IsInf':\n          return [ops.isInf(getTensor(node.inputNames[0], tensorMap, context))];\n        case 'IsFinite':\n          return [ops.isFinite(\n              getTensor(node.inputNames[0], tensorMap, context))];\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'basic_math';\n","\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * This differs from util.assertShapesMatch in that it allows values of\n * negative one, an undefined size of a dimensinon, in a shape to match\n * anything.\n */\n\nimport {Tensor, util} from '@tensorflow/tfjs-core';\n\n/**\n * Used by TensorList and TensorArray to verify if elementShape matches, support\n * negative value as the dim shape.\n * @param shapeA\n * @param shapeB\n * @param errorMessagePrefix\n */\nexport function assertShapesMatchAllowUndefinedSize(\n    shapeA: number|number[], shapeB: number|number[],\n    errorMessagePrefix = ''): void {\n  // constant shape means unknown rank\n  if (typeof shapeA === 'number' || typeof shapeB === 'number') {\n    return;\n  }\n  util.assert(\n      shapeA.length === shapeB.length,\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  for (let i = 0; i < shapeA.length; i++) {\n    const dim0 = shapeA[i];\n    const dim1 = shapeB[i];\n    util.assert(\n        dim0 < 0 || dim1 < 0 || dim0 === dim1,\n        () =>\n            errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n}\n\nexport function fullDefinedShape(elementShape: number|number[]): boolean {\n  if (typeof elementShape === 'number' || elementShape.some(dim => dim < 0)) {\n    return false;\n  }\n  return true;\n}\n/**\n * Generate the output element shape from the list elementShape, list tensors\n * and input param.\n * @param listElementShape\n * @param tensors\n * @param elementShape\n */\nexport function inferElementShape(\n    listElementShape: number|number[], tensors: Tensor[],\n    elementShape: number|number[]): number[] {\n  let partialShape = mergeElementShape(listElementShape, elementShape);\n  const notfullDefinedShape = !fullDefinedShape(partialShape);\n  if (notfullDefinedShape && tensors.length === 0) {\n    throw new Error(\n        `Tried to calculate elements of an empty list` +\n        ` with non-fully-defined elementShape: ${partialShape}`);\n  }\n  if (notfullDefinedShape) {\n    tensors.forEach(tensor => {\n      partialShape = mergeElementShape(tensor.shape, partialShape);\n    });\n  }\n  if (!fullDefinedShape(partialShape)) {\n    throw new Error(`Non-fully-defined elementShape: ${partialShape}`);\n  }\n  return partialShape as number[];\n}\n\nexport function mergeElementShape(\n    elementShapeA: number|number[], elementShapeB: number|number[]): number|\n    number[] {\n  if (typeof elementShapeA === 'number') {\n    return elementShapeB;\n  }\n  if (typeof elementShapeB === 'number') {\n    return elementShapeA;\n  }\n\n  if (elementShapeA.length !== elementShapeB.length) {\n    throw new Error(`Incompatible ranks during merge: ${elementShapeA} vs. ${\n        elementShapeB}`);\n  }\n\n  const result: number[] = [];\n  for (let i = 0; i < elementShapeA.length; ++i) {\n    const dim0 = elementShapeA[i];\n    const dim1 = elementShapeB[i];\n    if (dim0 >= 0 && dim1 >= 0 && dim0 !== dim1) {\n      throw new Error(`Incompatible shape during merge: ${elementShapeA} vs. ${\n          elementShapeB}`);\n    }\n    result[i] = dim0 >= 0 ? dim0 : dim1;\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {concat, DataType, keep, reshape, scalar, slice, stack, Tensor, tensor, tidy, unstack} from '@tensorflow/tfjs-core';\n\nimport {assertShapesMatchAllowUndefinedSize} from './tensor_utils';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly idTensor: Tensor;\n  constructor(\n      readonly name: string, readonly dtype: DataType, private maxSize: number,\n      private elementShape: number[], readonly identicalElementShapes: boolean,\n      readonly dynamicSize: boolean, readonly clearAfterRead: boolean) {\n    this.idTensor = scalar(0);\n    keep(this.idTensor);\n  }\n\n  get id() {\n    return this.idTensor.id;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Dispose the tensors and idTensor and mark the TensoryArray as closed.\n   */\n  clearAndClose(keepIds?: Set<number>) {\n    this.tensors.forEach(tensor => {\n      if (keepIds == null || !keepIds.has(tensor.tensor.id)) {\n        tensor.tensor.dispose();\n      }\n    });\n    this.tensors = [];\n    this.closed_ = true;\n    this.idTensor.dispose();\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.size()) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.size()}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 &&\n        (this.elementShape == null || this.elementShape.length === 0)) {\n      this.elementShape = tensor.shape;\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    keep(tensor);\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    } else {\n      indices = indices.slice(0, this.size());\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = reshape(slice(tensor, indices, sizes), this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {concat, DataType, keep, reshape, scalar, slice, stack, Tensor, tensor, tidy, unstack} from '@tensorflow/tfjs-core';\n\nimport {assertShapesMatchAllowUndefinedSize, inferElementShape, mergeElementShape} from './tensor_utils';\n\n/**\n * TensorList stores a container of `tf.Tensor` objects, which are accessible\n * via tensors field.\n *\n * In order to get a copy of the underlying list, use the copy method:\n * ```\n *    TensorList b = a.copy();\n *    b.tensors().pushBack(t);  // This does not modify a.tensors().\n * ```\n *\n * Note that this is not a deep copy: the memory locations of the underlying\n * tensors will still point to the same locations of the corresponding tensors\n * in the original.\n */\n\nexport class TensorList {\n  readonly idTensor: Tensor;\n  maxNumElements: number;\n\n  get id() {\n    return this.idTensor.id;\n  }\n  /**\n   *\n   * @param tensors list of tensors\n   * @param elementShape shape of each tensor, this can be a single number (any\n   * shape is allowed) or partial shape (dim = -1).\n   * @param elementDtype data type of each tensor\n   * @param maxNumElements The maximum allowed size of `tensors`. Defaults to -1\n   *   meaning that the size of `tensors` is unbounded.\n   */\n  constructor(\n      readonly tensors: Tensor[], readonly elementShape: number|number[],\n      readonly elementDtype: DataType, maxNumElements = -1) {\n    if (tensors != null) {\n      tensors.forEach(tensor => {\n        if (elementDtype !== tensor.dtype) {\n          throw new Error(`Invalid data types; op elements ${\n              elementDtype}, but list elements ${tensor.dtype}`);\n        }\n        assertShapesMatchAllowUndefinedSize(\n            elementShape, tensor.shape, 'TensorList shape mismatch: ');\n\n        keep(tensor);\n      });\n    }\n    this.idTensor = scalar(0);\n    this.maxNumElements = maxNumElements;\n    keep(this.idTensor);\n  }\n\n  /**\n   * Get a new TensorList containing a copy of the underlying tensor container.\n   */\n  copy(): TensorList {\n    return new TensorList(\n        [...this.tensors], this.elementShape, this.elementDtype);\n  }\n\n  /**\n   * Dispose the tensors and idTensor and clear the tensor list.\n   */\n  clearAndClose(keepIds?: Set<number>) {\n    this.tensors.forEach(tensor => {\n      if (keepIds == null || !keepIds.has(tensor.id)) {\n        tensor.dispose();\n      }\n    });\n    this.tensors.length = 0;\n    this.idTensor.dispose();\n  }\n  /**\n   * The size of the tensors in the tensor list.\n   */\n  size() {\n    return this.tensors.length;\n  }\n\n  /**\n   * Return a tensor that stacks a list of rank-R tf.Tensors into one rank-(R+1)\n   * tf.Tensor.\n   * @param elementShape shape of each tensor\n   * @param elementDtype data type of each tensor\n   * @param numElements the number of elements to stack\n   */\n  stack(elementShape: number[], elementDtype: DataType, numElements = -1):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n    if (numElements !== -1 && this.tensors.length !== numElements) {\n      throw new Error(`Operation expected a list with ${\n          numElements} elements but got a list with ${\n          this.tensors.length} elements.`);\n    }\n    assertShapesMatchAllowUndefinedSize(\n        elementShape, this.elementShape, 'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    return tidy(() => {\n      const reshapedTensors =\n          this.tensors.map(tensor => reshape(tensor, outputElementShape));\n      return stack(reshapedTensors, 0);\n    });\n  }\n\n  /**\n   * Pop a tensor from the end of the list.\n   * @param elementShape shape of the tensor\n   * @param elementDtype data type of the tensor\n   */\n  popBack(elementShape: number[], elementDtype: DataType): Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n\n    if (this.size() === 0) {\n      throw new Error('Trying to pop from an empty list.');\n    }\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    const tensor = this.tensors.pop();\n    tensor.kept = false;\n\n    assertShapesMatchAllowUndefinedSize(\n        tensor.shape, elementShape, 'TensorList shape mismatch: ');\n\n    return reshape(tensor, outputElementShape);\n  }\n\n  /**\n   * Push a tensor to the end of the list.\n   * @param tensor Tensor to be pushed.\n   */\n  pushBack(tensor: Tensor) {\n    if (tensor.dtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          tensor.dtype}, but list elements ${this.elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        tensor.shape, this.elementShape, 'TensorList shape mismatch: ');\n\n    if (this.maxNumElements === this.size()) {\n      throw new Error(`Trying to push element into a full list.`);\n    }\n    keep(tensor);\n    this.tensors.push(tensor);\n  }\n\n  /**\n   * Update the size of the list.\n   * @param size the new size of the list.\n   */\n  resize(size: number) {\n    if (size < 0) {\n      throw new Error(\n          `TensorListResize expects size to be non-negative. Got: ${size}`);\n    }\n\n    if (this.maxNumElements !== -1 && size > this.maxNumElements) {\n      throw new Error(`TensorListResize input size ${\n          size} is greater maxNumElement ${this.maxNumElements}.`);\n    }\n\n    const destTensorList: TensorList = new TensorList(\n        [], this.elementShape, this.elementDtype, this.maxNumElements);\n    destTensorList.tensors.length = size;\n    for (let i = 0; i < Math.min(this.tensors.length, size); ++i) {\n      destTensorList.tensors[i] = this.tensors[i];\n    }\n    return destTensorList;\n  }\n\n  /**\n   * Retrieve the element at the provided index\n   * @param elementShape shape of the tensor\n   * @param elementDtype dtype of the tensor\n   * @param elementIndex index of the tensor\n   */\n  getItem(elementIndex: number, elementShape: number[], elementDtype: DataType):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n    if (elementIndex < 0 || elementIndex > this.tensors.length) {\n      throw new Error(`Trying to access element ${\n          elementIndex} in a list with ${this.tensors.length} elements.`);\n    }\n\n    if (this.tensors[elementIndex] == null) {\n      throw new Error(`element at index ${elementIndex} is null.`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.tensors[elementIndex].shape, elementShape,\n        'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    return reshape(this.tensors[elementIndex], outputElementShape);\n  }\n\n  /**\n   * Set the tensor at the index\n   * @param elementIndex index of the tensor\n   * @param tensor the tensor to be inserted into the list\n   */\n  setItem(elementIndex: number, tensor: Tensor) {\n    if (tensor.dtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          tensor.dtype}, but list elements ${this.elementDtype}`);\n    }\n\n    if (elementIndex < 0 ||\n        this.maxNumElements !== -1 && elementIndex >= this.maxNumElements) {\n      throw new Error(`Trying to set element ${\n          elementIndex} in a list with max ${this.maxNumElements} elements.`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape, 'TensorList shape mismatch: ');\n    keep(tensor);\n\n    // dispose the previous value if it is replacing.\n    if (this.tensors[elementIndex] != null) {\n      this.tensors[elementIndex].kept = false;\n    }\n\n    this.tensors[elementIndex] = tensor;\n  }\n\n  /**\n   * Return selected values in the TensorList as a stacked Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param indices indices of tensors to gather\n   * @param elementDtype output tensor dtype\n   * @param elementShape output tensor element shape\n   */\n  gather(indices: number[], elementDtype: DataType, elementShape: number[]):\n      Tensor {\n    if (elementDtype !== this.elementDtype) {\n      throw new Error(`Invalid data types; op elements ${\n          elementDtype}, but list elements ${this.elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, elementShape, 'TensorList shape mismatch: ');\n\n    // When indices is greater than the size of the list, indices beyond the\n    // size of the list are ignored.\n    indices = indices.slice(0, this.size());\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n    if (indices.length === 0) {\n      return tensor([], [0].concat(outputElementShape));\n    }\n\n    return tidy(() => {\n      const tensors =\n          indices.map(i => reshape(this.tensors[i], outputElementShape));\n      return stack(tensors, 0);\n    });\n  }\n\n  /**\n   * Return the values in the TensorList as a concatenated Tensor.\n   * @param elementDtype output tensor dtype\n   * @param elementShape output tensor element shape\n   */\n  concat(elementDtype: DataType, elementShape: number[]): Tensor {\n    if (!!elementDtype && elementDtype !== this.elementDtype) {\n      throw new Error(`TensorList dtype is ${\n          this.elementDtype} but concat requested dtype ${elementDtype}`);\n    }\n\n    assertShapesMatchAllowUndefinedSize(\n        this.elementShape, elementShape, 'TensorList shape mismatch: ');\n    const outputElementShape =\n        inferElementShape(this.elementShape, this.tensors, elementShape);\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(outputElementShape));\n    }\n    return tidy(() => {\n      const tensors = this.tensors.map(t => reshape(t, outputElementShape));\n      return concat(tensors, 0);\n    });\n  }\n}\n\n/**\n * Creates a TensorList which, when stacked, has the value of tensor.\n * @param tensor from tensor\n * @param elementShape output tensor element shape\n */\nexport function fromTensor(\n    tensor: Tensor, elementShape: number[], elementDtype: DataType) {\n  const dtype = tensor.dtype;\n  if (tensor.shape.length < 1) {\n    throw new Error(\n        `Tensor must be at least a vector, but saw shape: ${tensor.shape}`);\n  }\n  if (tensor.dtype !== elementDtype) {\n    throw new Error(`Invalid data types; op elements ${\n        tensor.dtype}, but list elements ${elementDtype}`);\n  }\n  const tensorElementShape = tensor.shape.slice(1);\n  assertShapesMatchAllowUndefinedSize(\n      tensorElementShape, elementShape, 'TensorList shape mismatch: ');\n  const tensorList: Tensor[] = unstack(tensor);\n  return new TensorList(tensorList, elementShape, dtype);\n}\n\n/**\n * Return a TensorList of the given size with empty elements.\n * @param elementShape the shape of the future elements of the list\n * @param elementDtype the desired type of elements in the list\n * @param numElements the number of elements to reserve\n * @param maxNumElements the maximum number of elements in th list\n */\nexport function reserve(\n    elementShape: number[], elementDtype: DataType, numElements: number,\n    maxNumElements: number) {\n  return new TensorList([], elementShape, elementDtype, maxNumElements);\n}\n\n/**\n * Put tensors at specific indices of a stacked tensor into a TensorList.\n * @param indices list of indices on how to scatter the tensor.\n * @param tensor input tensor.\n * @param elementShape the shape of the future elements of the list\n * @param numElements the number of elements to scatter\n */\nexport function scatter(\n    tensor: Tensor, indices: number[], elementShape: number[],\n    numElements?: number): TensorList {\n  if (indices.length !== tensor.shape[0]) {\n    throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n        indices.length} vs. ${tensor.shape[0]}`);\n  }\n\n  const maxIndex = Math.max(...indices);\n\n  if (numElements != null && numElements !== -1 && maxIndex >= numElements) {\n    throw new Error(\n        `Max index must be < array size (${maxIndex}  vs. ${numElements})`);\n  }\n\n  const list = new TensorList([], elementShape, tensor.dtype, numElements);\n  const tensors = unstack(tensor, 0);\n  indices.forEach((value, index) => {\n    list.setItem(value, tensors[index]);\n  });\n  return list;\n}\n\n/**\n * Split the values of a Tensor into a TensorList.\n * @param length the lengths to use when splitting value along\n *    its first dimension.\n * @param tensor the tensor to split.\n * @param elementShape the shape of the future elements of the list\n */\nexport function split(\n    tensor: Tensor, length: number[], elementShape: number[]) {\n  let totalLength = 0;\n  const cumulativeLengths = length.map(len => {\n    totalLength += len;\n    return totalLength;\n  });\n\n  if (totalLength !== tensor.shape[0]) {\n    throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n  }\n\n  const shapeWithoutFirstDim = tensor.shape.slice(1);\n  const outputElementShape =\n      mergeElementShape(shapeWithoutFirstDim, elementShape);\n  const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n  const tensors: Tensor[] = tidy(() => {\n    const tensors = [];\n    tensor = reshape(tensor, [1, totalLength, elementPerRow]);\n    for (let i = 0; i < length.length; ++i) {\n      const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n      const indices = [0, previousLength, 0];\n      const sizes = [1, length[i], elementPerRow];\n      tensors[i] = reshape(\n          slice(tensor, indices, sizes), outputElementShape as number[]);\n    }\n    tensor.dispose();\n    return tensors;\n  });\n\n  const list = new TensorList([], elementShape, tensor.dtype, length.length);\n\n  for (let i = 0; i < tensors.length; i++) {\n    list.setItem(i, tensors[i]);\n  }\n  return list;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, scalar, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {fromTensor, reserve, scatter, split} from '../../executor/tensor_list';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {cloneTensor, getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'If':\n    case 'StatelessIf': {\n      const thenFunc =\n          getParamValue('thenBranch', node, tensorMap, context) as string;\n      const elseFunc =\n          getParamValue('elseBranch', node, tensorMap, context) as string;\n      const cond = getParamValue('cond', node, tensorMap, context) as Tensor;\n      const args = getParamValue('args', node, tensorMap, context) as Tensor[];\n      const condValue = await cond.data();\n      if (condValue[0]) {\n        return context.functionMap[thenFunc].executeFunctionAsync(\n            args, context.tensorArrayMap, context.tensorListMap);\n      } else {\n        return context.functionMap[elseFunc].executeFunctionAsync(\n            args, context.tensorArrayMap, context.tensorListMap);\n      }\n    }\n    case 'While':\n    case 'StatelessWhile': {\n      const bodyFunc =\n          getParamValue('body', node, tensorMap, context) as string;\n      const condFunc =\n          getParamValue('cond', node, tensorMap, context) as string;\n      const args = getParamValue('args', node, tensorMap, context) as Tensor[];\n\n      // Calculate the condition of the loop\n      const condResult =\n          (await context.functionMap[condFunc].executeFunctionAsync(\n              args, context.tensorArrayMap, context.tensorListMap));\n      const argIds = args.map(tensor => tensor.id);\n      let condValue = await condResult[0].data();\n      // Dispose the intermediate tensors for condition function\n      condResult.forEach(tensor => {\n        if (!tensor.kept && argIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n\n      let result: Tensor[] = args;\n\n      while (condValue[0]) {\n        // Record the previous result for intermediate tensor tracking\n        const origResult = result;\n        // Execution the body of the loop\n        result = await context.functionMap[bodyFunc].executeFunctionAsync(\n            result, context.tensorArrayMap, context.tensorListMap);\n        const resultIds = result.map(tensor => tensor.id);\n\n        // Dispose the intermediate tensor for body function that is not global\n        // kept, not input/output of the body function\n        origResult.forEach(tensor => {\n          if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n              resultIds.indexOf(tensor.id) === -1) {\n            tensor.dispose();\n          }\n        });\n\n        // Recalcuate the condition of the loop using the latest results.\n        const condResult =\n            (await context.functionMap[condFunc].executeFunctionAsync(\n                result, context.tensorArrayMap, context.tensorListMap));\n        condValue = await condResult[0].data();\n        // Dispose the intermediate tensors for condition function\n        condResult.forEach(tensor => {\n          if (!tensor.kept && argIds.indexOf(tensor.id) === -1 &&\n              resultIds.indexOf(tensor.id) === -1) {\n            tensor.dispose();\n          }\n        });\n      }\n      return result;\n    }\n    case 'LoopCond': {\n      const pred = getParamValue('pred', node, tensorMap, context) as Tensor;\n      return [cloneTensor(pred)];\n    }\n    case 'Switch': {\n      const pred = getParamValue('pred', node, tensorMap, context) as Tensor;\n      let data = getParamValue('data', node, tensorMap, context) as Tensor;\n      if (!data.kept) {\n        data = cloneTensor(data);\n      }\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data] : [data, undefined];\n    }\n    case 'Merge': {\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      if (inputName) {\n        const data = getTensor(inputName, tensorMap, context);\n        return [cloneTensor(data)];\n      }\n      return undefined;\n    }\n    case 'Enter': {\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.enterFrame(frameId);\n      return [cloneTensor(data)];\n    }\n    case 'Exit': {\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.exitFrame();\n      return [cloneTensor(data)];\n    }\n    case 'NextIteration': {\n      const data = getParamValue('tensor', node, tensorMap, context) as Tensor;\n      context.nextIteration();\n      return [cloneTensor(data)];\n    }\n    case 'TensorArrayV3': {\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [tensorArray.idTensor, scalar(1.0)];\n    }\n    case 'TensorArrayWriteV3': {\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const writeTensorArray = context.getTensorArray(id.id);\n      writeTensorArray.write(index, writeTensor);\n      return [writeTensorArray.idTensor];\n    }\n    case 'TensorArrayReadV3': {\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId.id);\n      return [readTensorArray.read(readIndex)];\n    }\n    case 'TensorArrayGatherV3': {\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId.id);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n    }\n    case 'TensorArrayScatterV3': {\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId.id);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scatterTensorArray.idTensor];\n    }\n    case 'TensorArrayConcatV3': {\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const concatTensorArray = context.getTensorArray(concatId.id);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      return [concatTensorArray.concat(concatDtype)];\n    }\n    case 'TensorArraySplitV3': {\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId.id);\n      splitTensorArray.split(lengths, splitTensor);\n      return [splitTensorArray.idTensor];\n    }\n    case 'TensorArraySizeV3': {\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const sizeTensorArray = context.getTensorArray(sizeId.id);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n    }\n    case 'TensorArrayCloseV3': {\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as Tensor;\n      const closeTensorArray = context.getTensorArray(closeId.id);\n      closeTensorArray.clearAndClose();\n      return [closeTensorArray.idTensor];\n    }\n    case 'TensorListSetItem': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(idTensor.id);\n      tensorList.setItem(index, writeTensor);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListGetItem': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n\n      const elementDType =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.getItem(readIndex, elementShape, elementDType)];\n    }\n    case 'TensorListScatterV2':\n    case 'TensorListScatter': {\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const numElements =\n          getParamValue('numElements', node, tensorMap, context) as number;\n      const tensorList =\n          scatter(scatterTensor, scatterIndices, elementShape, numElements);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListReserve':\n    case 'EmptyTensorList': {\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      let numElementsParam;\n\n      if (node.op === 'TensorListReserve') {\n        numElementsParam = 'numElements';\n      } else {\n        numElementsParam = 'maxNumElements';\n      }\n\n      const numElements =\n          getParamValue(numElementsParam, node, tensorMap, context) as number;\n      const maxNumElements = node.op === 'TensorListReserve' ? -1 : numElements;\n      const tensorList =\n          reserve(elementShape, elementDtype, numElements, maxNumElements);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListGather': {\n      const gatherId =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(gatherId.id);\n      return [tensorList.gather(gatherIndices, elementDtype, elementShape)];\n    }\n    case 'TensorListStack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const numElements =\n          getParamValue('numElements', node, tensorMap, context) as number;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.stack(elementShape, elementDtype, numElements)];\n    }\n    case 'TensorListFromTensor': {\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDtype =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = fromTensor(tensor, elementShape, elementDtype);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListConcat':\n    case 'TensorListConcatV2': {\n      const concatId =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(concatId.id);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      return [tensorList.concat(concatDtype, elementShape)];\n    }\n    case 'TensorListPushBack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(idTensor.id);\n      tensorList.pushBack(writeTensor);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListPopBack': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const elementDType =\n          getParamValue('elementDType', node, tensorMap, context) as DataType;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [tensorList.popBack(elementShape, elementDType)];\n    }\n    case 'TensorListSplit': {\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as Tensor;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n\n      const tensorList = split(splitTensor, lengths, elementShape);\n      context.addTensorList(tensorList);\n      return [tensorList.idTensor];\n    }\n    case 'TensorListLength': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const tensorList = context.getTensorList(idTensor.id);\n      return [scalar(tensorList.size(), 'int32')];\n    }\n    case 'TensorListResize': {\n      const idTensor =\n          getParamValue('tensorListId', node, tensorMap, context) as Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number;\n\n      const srcTensorList = context.getTensorList(idTensor.id);\n      const destTensorList = srcTensorList.resize(size);\n      context.addTensorList(destTensorList);\n      return [destTensorList.idTensor];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Rank, Tensor, Tensor3D, Tensor4D, Tensor5D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getPadding, getParamValue} from './utils';\n\nfunction fusedConvAndDepthWiseParams(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) {\n  const [extraOp, activationFunc] =\n      (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n  const isBiasAdd = extraOp === 'biasadd';\n  const noBiasAdd = !isBiasAdd;\n  const isPrelu = activationFunc === 'prelu';\n  const isBatchNorm = extraOp === 'fusedbatchnorm';\n\n  const numArgs =\n      (getParamValue('numArgs', node, tensorMap, context) as number);\n  if (isBiasAdd) {\n    if (isPrelu && numArgs !== 2) {\n      throw new Error(\n          'FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu ' +\n          'must have two extra arguments: bias and alpha.');\n    }\n    if (!isPrelu && isBiasAdd && numArgs !== 1) {\n      throw new Error(\n          'FusedConv2d and DepthwiseConv2d with BiasAdd must have ' +\n          'one extra argument: bias.');\n    }\n  }\n  if (isBatchNorm) {\n    throw new Error(\n        'FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported');\n  }\n  const stride = getParamValue('strides', node, tensorMap, context) as number[];\n  const pad = getPadding(node, tensorMap, context);\n  const dataFormat =\n      (getParamValue('dataFormat', node, tensorMap, context) as string)\n          .toUpperCase();\n  const dilations =\n      getParamValue('dilations', node, tensorMap, context) as number[];\n  let [biasArg, preluArg] =\n      getParamValue('args', node, tensorMap, context) as Tensor[];\n  if (noBiasAdd) {\n    preluArg = biasArg;\n    biasArg = undefined;\n  }\n  const leakyreluAlpha =\n      getParamValue('leakyreluAlpha', node, tensorMap, context) as number;\n\n  return {\n    stride,\n    pad,\n    dataFormat,\n    dilations,\n    biasArg,\n    preluArg,\n    activationFunc,\n    leakyreluAlpha\n  };\n}\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Conv1D': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [ops.conv1d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'Conv2D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [ops.conv2d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case '_FusedConv2D': {\n          const {\n            stride,\n            pad,\n            dataFormat,\n            dilations,\n            biasArg,\n            preluArg,\n            activationFunc,\n            leakyreluAlpha\n          } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n\n          return [ops.fused.conv2d({\n            x: getParamValue('x', node, tensorMap, context) as Tensor3D |\n                Tensor4D,\n            filter: getParamValue('filter', node, tensorMap, context) as\n                Tensor4D,\n            strides: [stride[1], stride[2]],\n            pad: pad as 'valid' | 'same',\n            dataFormat: dataFormat as 'NHWC' | 'NCHW',\n            dilations: [dilations[1], dilations[2]],\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n        }\n\n        case 'FusedDepthwiseConv2dNative': {\n          const {\n            stride,\n            pad,\n            dataFormat,\n            dilations,\n            biasArg,\n            preluArg,\n            activationFunc,\n            leakyreluAlpha,\n          } = fusedConvAndDepthWiseParams(node, tensorMap, context);\n\n          return [ops.fused.depthwiseConv2d({\n            x: getParamValue('x', node, tensorMap, context) as Tensor3D |\n                Tensor4D,\n            filter: getParamValue('filter', node, tensorMap, context) as\n                Tensor4D,\n            strides: [stride[1], stride[2]],\n            pad: pad as 'valid' | 'same',\n            dataFormat: dataFormat as 'NHWC' | 'NCHW',\n            dilations: [dilations[1], dilations[2]],\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          return [ops.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getPadding(node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [ops.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case 'Conv3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [ops.conv3d(\n              getParamValue('x', node, tensorMap, context) as Tensor4D |\n                  Tensor<Rank.R5>,\n              getParamValue('filter', node, tensorMap, context) as\n                  Tensor<Rank.R5>,\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same',\n              dataFormat as 'NDHWC' | 'NCDHW',\n              [dilations[1], dilations[2], dilations[3]])];\n        }\n        case 'AvgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [ops.avgPool(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        case 'MaxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [ops.maxPool(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        case 'MaxPoolWithArgmax': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n          const includeBatchInIndex =\n              getParamValue('includeBatchInIndex', node, tensorMap, context) as\n              boolean;\n          const {result, indexes} = ops.maxPoolWithArgmax(\n              getParamValue('x', node, tensorMap, context) as Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same', includeBatchInIndex);\n          return [result, indexes];\n        }\n        case 'AvgPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [ops.avgPool3d(\n              getParamValue('x', node, tensorMap, context) as Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        case 'MaxPool3D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [ops.maxPool3d(\n              getParamValue('x', node, tensorMap, context) as Tensor5D,\n              [kernelSize[1], kernelSize[2], kernelSize[3]],\n              [stride[1], stride[2], stride[3]], pad as 'valid' | 'same')];\n        }\n\n        case 'Dilation2D': {\n          const strides =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n\n          // strides: [1, stride_height, stride_width, 1].\n          const strideHeight = strides[1];\n          const strideWidth = strides[2];\n\n          // dilations: [1, dilation_height, dilation_width, 1].\n          const dilationHeight = dilations[1];\n          const dilationWidth = dilations[2];\n\n          return [ops.dilation2d(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as Tensor3D,\n              [strideHeight, strideWidth], pad as 'valid' | 'same',\n              [dilationHeight, dilationWidth], 'NHWC' /* dataFormat */)];\n        }\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor, Tensor1D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Fill': {\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          const dtype =\n              getParamValue('dtype', node, tensorMap, context) as DataType;\n          const value =\n              getParamValue('value', node, tensorMap, context) as number;\n          return [ops.fill(shape, value, dtype)];\n        }\n        case 'LinSpace': {\n          const start =\n              getParamValue('start', node, tensorMap, context) as number;\n          const stop =\n              getParamValue('stop', node, tensorMap, context) as number;\n          const num = getParamValue('num', node, tensorMap, context) as number;\n          return [ops.linspace(start, stop, num)];\n        }\n        case 'Multinomial': {\n          const logits =\n              getParamValue('logits', node, tensorMap, context) as Tensor1D;\n          const numSamples =\n              getParamValue('numSamples', node, tensorMap, context) as number;\n          const seed =\n              getParamValue('seed', node, tensorMap, context) as number;\n          return [ops.multinomial(logits, numSamples, seed)];\n        }\n        case 'OneHot': {\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          const depth =\n              getParamValue('depth', node, tensorMap, context) as number;\n          const onValue =\n              getParamValue('onValue', node, tensorMap, context) as number;\n          const offValue =\n              getParamValue('offValue', node, tensorMap, context) as number;\n          const dtype =\n              getParamValue('dtype', node, tensorMap, context) as DataType;\n          return [ops.oneHot(indices, depth, onValue, offValue, dtype)];\n        }\n        case 'Ones': {\n          return [ops.ones(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'OnesLike': {\n          return [ops.onesLike(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'RandomStandardNormal': {\n          return [ops.randomStandardNormal(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('dtype', node, tensorMap, context) as 'float32' |\n                  'int32',\n              getParamValue('seed', node, tensorMap, context) as number)];\n        }\n        case 'RandomUniform': {\n          return [ops.randomUniform(\n              // tslint:disable-next-line:no-any\n              getParamValue('shape', node, tensorMap, context) as any,\n              getParamValue('minval', node, tensorMap, context) as number,\n              getParamValue('maxval', node, tensorMap, context) as number,\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'RandomUniformInt': {\n          return [ops.randomUniformInt(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('minval', node, tensorMap, context) as number,\n              getParamValue('maxval', node, tensorMap, context) as number,\n              getParamValue('seed', node, tensorMap, context) as number)];\n        }\n        case 'Range': {\n          const start =\n              getParamValue('start', node, tensorMap, context) as number;\n          const stop =\n              getParamValue('stop', node, tensorMap, context) as number;\n          const step =\n              getParamValue('step', node, tensorMap, context) as number;\n          return [ops.range(\n              start, stop, step,\n              getParamValue('dtype', node, tensorMap, context) as 'float32' |\n                  'int32')];\n        }\n        case 'TruncatedNormal': {\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          const mean =\n              getParamValue('mean', node, tensorMap, context) as number;\n          const stdDev =\n              getParamValue('stdDev', node, tensorMap, context) as number;\n          const seed =\n              getParamValue('seed', node, tensorMap, context) as number;\n          return [ops.truncatedNormal(\n              shape, mean, stdDev,\n              getParamValue('dtype', node, tensorMap, context) as 'float32' |\n                  'int32',\n              seed)];\n        }\n        case 'Zeros': {\n          return [ops.zeros(\n              getParamValue('shape', node, tensorMap, context) as number[],\n              getParamValue('dtype', node, tensorMap, context) as DataType)];\n        }\n        case 'ZerosLike': {\n          return [ops.zerosLike(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport { ResourceManager } from '../../executor/resource_manager';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nfunction nmsParams(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) {\n  const boxes = getParamValue('boxes', node, tensorMap, context) as Tensor;\n  const scores = getParamValue('scores', node, tensorMap, context) as Tensor;\n  const maxOutputSize =\n      getParamValue('maxOutputSize', node, tensorMap, context) as number;\n  const iouThreshold =\n      getParamValue('iouThreshold', node, tensorMap, context) as number;\n  const scoreThreshold =\n      getParamValue('scoreThreshold', node, tensorMap, context) as number;\n  const softNmsSigma =\n      getParamValue('softNmsSigma', node, tensorMap, context) as number;\n\n  return {\n    boxes,\n    scores,\n    maxOutputSize,\n    iouThreshold,\n    scoreThreshold,\n    softNmsSigma\n  };\n}\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext, resourceManager: ResourceManager,\n    ops = tfOps): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'NonMaxSuppressionV5': {\n      const {\n        boxes,\n        scores,\n        maxOutputSize,\n        iouThreshold,\n        scoreThreshold,\n        softNmsSigma\n      } = nmsParams(node, tensorMap, context);\n\n      const result = await ops.image.nonMaxSuppressionWithScoreAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold, softNmsSigma);\n\n      return [result.selectedIndices, result.selectedScores];\n    }\n    case 'NonMaxSuppressionV4': {\n      const {boxes, scores, maxOutputSize, iouThreshold, scoreThreshold} =\n          nmsParams(node, tensorMap, context);\n\n      const padToMaxOutputSize =\n          getParamValue('padToMaxOutputSize', node, tensorMap, context) as\n          boolean;\n\n      const result = await ops.image.nonMaxSuppressionPaddedAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold, padToMaxOutputSize);\n\n      return [result.selectedIndices, result.validOutputs];\n    }\n    case 'NonMaxSuppressionV3':\n    case 'NonMaxSuppressionV2': {\n      const {boxes, scores, maxOutputSize, iouThreshold, scoreThreshold} =\n          nmsParams(node, tensorMap, context);\n\n      return [await ops.image.nonMaxSuppressionAsync(\n          boxes as Tensor2D, scores as Tensor1D, maxOutputSize, iouThreshold,\n          scoreThreshold)];\n    }\n    case 'Where': {\n      const condition = ops.cast(\n          (getParamValue('condition', node, tensorMap, context) as Tensor),\n          'bool');\n      const result = [await ops.whereAsync(condition)];\n      condition.dispose();\n      return result;\n    }\n    case 'ListDiff': {\n      return ops.setdiff1dAsync(\n          getParamValue('x', node, tensorMap, context) as Tensor,\n          getParamValue('y', node, tensorMap, context) as Tensor);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps):\n        Tensor[] => {\n          switch (node.op) {\n            case 'LowerBound': {\n              const sortedSequence =\n                  getParamValue('sortedSequence', node, tensorMap, context) as\n                  Tensor;\n              const values =\n                  getParamValue('values', node, tensorMap, context) as Tensor;\n              return [ops.lowerBound(sortedSequence, values)];\n            }\n            case 'TopKV2': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const k = getParamValue('k', node, tensorMap, context) as number;\n              const sorted =\n                  getParamValue('sorted', node, tensorMap, context) as boolean;\n              const result = ops.topk(x, k, sorted);\n              return [result.values, result.indices];\n            }\n            case 'UpperBound': {\n              const sortedSequence =\n                  getParamValue('sortedSequence', node, tensorMap, context) as\n                  Tensor;\n              const values =\n                  getParamValue('values', node, tensorMap, context) as Tensor;\n              return [ops.upperBound(sortedSequence, values)];\n            }\n            case 'Unique': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const result = ops.unique(x);\n              return [result.values, result.indices];\n            }\n            case 'UniqueV2': {\n              const x = getParamValue('x', node, tensorMap, context) as Tensor;\n              const axis =\n                  getParamValue('axis', node, tensorMap, context) as number;\n              const result = ops.unique(x, axis);\n              return [result.values, result.indices];\n            }\n            default:\n              throw TypeError(`Node type ${node.op} is not implemented`);\n          }\n        };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {cloneTensor, getParamValue, getTensor} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Const': {\n          return tensorMap[node.name];\n        }\n        case 'PlaceholderWithDefault':\n          const def =\n              getParamValue('default', node, tensorMap, context) as Tensor;\n          return [getTensor(node.name, tensorMap, context) || def];\n        case 'Placeholder':\n          return [getTensor(node.name, tensorMap, context)];\n        case 'Identity':\n        case 'StopGradient':\n        case 'FakeQuantWithMinMaxVars': {  // This op is currently ignored.\n          const data = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [cloneTensor(data)];\n        }\n        case 'IdentityN':\n          return (getParamValue('x', node, tensorMap, context) as Tensor[])\n              .map((t: Tensor) => cloneTensor(t));\n        case 'Snapshot':\n          const snapshot =\n              (getParamValue('x', node, tensorMap, context) as Tensor);\n          return [cloneTensor(snapshot)];\n        case 'Shape':\n          return [ops.tensor1d(\n              (getParamValue('x', node, tensorMap, context) as Tensor).shape,\n              'int32')];\n        case 'ShapeN':\n          return (getParamValue('x', node, tensorMap, context) as Tensor[])\n              .map((t: Tensor) => ops.tensor1d(t.shape));\n        case 'Size':\n          return [ops.scalar(\n              (getParamValue('x', node, tensorMap, context) as Tensor).size,\n              'int32')];\n        case 'Rank':\n          return [ops.scalar(\n              (getParamValue('x', node, tensorMap, context) as Tensor).rank,\n              'int32')];\n        case 'NoOp':\n          return [ops.scalar(1)];\n        case 'Print':\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const data =\n              getParamValue('data', node, tensorMap, context) as Tensor[];\n          const message =\n              getParamValue('message', node, tensorMap, context) as string;\n          const summarize =\n              getParamValue('summarize', node, tensorMap, context) as number;\n          console.warn(\n              'The graph has a tf.print() operation,' +\n              'usually used for debugging, which slows down performance.');\n          console.log(message);\n          for (let i = 0; i < data.length; i++) {\n            console.log(Array.prototype.slice.call(data[i].dataSync())\n                            .slice(0, summarize));\n          }\n          return [input];\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {DataType, keep, scalar, stack, Tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\n/**\n * Hashtable contains a set of tensors, which can be accessed by key.\n */\nexport class HashTable {\n  readonly handle: Tensor;\n\n  // tslint:disable-next-line: no-any\n  private tensorMap: Map<any, Tensor>;\n\n  get id() {\n    return this.handle.id;\n  }\n\n  /**\n   * Constructor of HashTable. Creates a hash table.\n   *\n   * @param keyDType `dtype` of the table keys.\n   * @param valueDType `dtype` of the table values.\n   */\n  constructor(readonly keyDType: DataType, readonly valueDType: DataType) {\n    this.handle = scalar(0);\n    // tslint:disable-next-line: no-any\n    this.tensorMap = new Map<any, Tensor>();\n\n    keep(this.handle);\n  }\n\n  /**\n   * Dispose the tensors and handle and clear the hashtable.\n   */\n  clearAndClose() {\n    this.tensorMap.forEach(value => value.dispose());\n    this.tensorMap.clear();\n    this.handle.dispose();\n  }\n\n  /**\n   * The number of items in the hash table.\n   */\n  size(): number {\n    return this.tensorMap.size;\n  }\n\n  /**\n   * The number of items in the hash table as a rank-0 tensor.\n   */\n  tensorSize(): Tensor {\n    return tfOps.scalar(this.size(), 'int32');\n  }\n\n  /**\n   * Replaces the contents of the table with the specified keys and values.\n   * @param keys Keys to store in the hashtable.\n   * @param values Values to store in the hashtable.\n   */\n  async import(keys: Tensor, values: Tensor): Promise<Tensor> {\n    this.checkKeyAndValueTensor(keys, values);\n\n    // We only store the primitive values of the keys, this allows lookup\n    // to be O(1).\n    const $keys = await keys.data();\n\n    // Clear the hashTable before inserting new values.\n    this.tensorMap.forEach(value => value.dispose());\n    this.tensorMap.clear();\n\n    return tidy(() => {\n      const $values = unstack(values);\n\n      const keysLength = $keys.length;\n      const valuesLength = $values.length;\n\n      util.assert(\n          keysLength === valuesLength,\n          () => `The number of elements doesn't match, keys has ` +\n              `${keysLength} elements, the values has ${valuesLength} ` +\n              `elements.`);\n\n      for (let i = 0; i < keysLength; i++) {\n        const key = $keys[i];\n        const value = $values[i];\n\n        keep(value);\n        this.tensorMap.set(key, value);\n      }\n\n      return this.handle;\n    });\n  }\n\n  /**\n   * Looks up keys in a hash table, outputs the corresponding values.\n   *\n   * Performs batch lookups, for every element in the key tensor, `find`\n   * stacks the corresponding value into the return tensor.\n   *\n   * If an element is not present in the table, the given `defaultValue` is\n   * used.\n   *\n   * @param keys Keys to look up. Must have the same type as the keys of the\n   *     table.\n   * @param defaultValue The scalar `defaultValue` is the value output for keys\n   *     not present in the table. It must also be of the same type as the\n   *     table values.\n   */\n  async find(keys: Tensor, defaultValue: Tensor): Promise<Tensor> {\n    this.checkKeyAndValueTensor(keys, defaultValue);\n\n    const $keys = await keys.data();\n\n    return tidy(() => {\n      const result: Tensor[] = [];\n\n      for (let i = 0; i < $keys.length; i++) {\n        const key = $keys[i];\n\n        const value = this.findWithDefault(key, defaultValue);\n        result.push(value);\n      }\n\n      return stack(result);\n    });\n  }\n\n  // tslint:disable-next-line: no-any\n  private findWithDefault(key: any, defaultValue: Tensor): Tensor {\n    const result = this.tensorMap.get(key);\n\n    return result != null ? result : defaultValue;\n  }\n\n  private checkKeyAndValueTensor(key: Tensor, value: Tensor) {\n    if (key.dtype !== this.keyDType) {\n      throw new Error(\n          `Expect key dtype ${this.keyDType}, but got ` +\n          `${key.dtype}`);\n    }\n\n    if (value.dtype !== this.valueDType) {\n      throw new Error(\n          `Expect value dtype ${this.valueDType}, but got ` +\n          `${value.dtype}`);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {HashTable} from '../../executor/hash_table';\nimport {ResourceManager} from '../../executor/resource_manager';\nimport {InternalOpAsyncExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpAsyncExecutor = async(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager: ResourceManager): Promise<Tensor[]> => {\n  switch (node.op) {\n    case 'HashTable':\n    case 'HashTableV2': {\n      const existingTableHandle =\n          resourceManager.getHashTableHandleByName(node.name);\n      // Table is shared with initializer.\n      if (existingTableHandle != null) {\n        return [existingTableHandle];\n      } else {\n        const keyDType =\n            getParamValue('keyDType', node, tensorMap, context) as DataType;\n        const valueDType =\n            getParamValue('valueDType', node, tensorMap, context) as DataType;\n\n        const hashTable = new HashTable(keyDType, valueDType);\n        resourceManager.addHashTable(node.name, hashTable);\n        return [hashTable.handle];\n      }\n    }\n    case 'InitializeTable':\n    case 'InitializeTableV2':\n    case 'LookupTableImport':\n    case 'LookupTableImportV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n      const keys = getParamValue('keys', node, tensorMap, context) as Tensor;\n      const values =\n          getParamValue('values', node, tensorMap, context) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n\n      return [await hashTable.import(keys, values)];\n    }\n    case 'LookupTableFind':\n    case 'LookupTableFindV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n      const keys = getParamValue('keys', node, tensorMap, context) as Tensor;\n      const defaultValue =\n          getParamValue('defaultValue', node, tensorMap, context) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n      return [await hashTable.find(keys, defaultValue)];\n    }\n    case 'LookupTableSize':\n    case 'LookupTableSizeV2': {\n      const handle = getParamValue(\n                         'tableHandle', node, tensorMap, context,\n                         resourceManager) as Tensor;\n\n      const hashTable = resourceManager.getHashTableById(handle.id);\n      return [hashTable.tensorSize()];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'hash_table';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'ResizeBilinear': {\n          const images =\n              getParamValue('images', node, tensorMap, context) as Tensor;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number[];\n          const alignCorners =\n              getParamValue('alignCorners', node, tensorMap, context) as\n              boolean;\n          const halfPixelCenters =\n              getParamValue('halfPixelCenters', node, tensorMap, context) as\n              boolean;\n          return [ops.image.resizeBilinear(\n              images as Tensor3D | Tensor4D, [size[0], size[1]], alignCorners,\n              halfPixelCenters)];\n        }\n        case 'ResizeNearestNeighbor': {\n          const images =\n              getParamValue('images', node, tensorMap, context) as Tensor;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number[];\n          const alignCorners =\n              getParamValue('alignCorners', node, tensorMap, context) as\n              boolean;\n          const halfPixelCenters =\n              getParamValue('halfPixelCenters', node, tensorMap, context) as\n              boolean;\n          return [ops.image.resizeNearestNeighbor(\n              images as Tensor3D | Tensor4D, [size[0], size[1]], alignCorners,\n              halfPixelCenters)];\n        }\n        case 'CropAndResize': {\n          const image =\n              getParamValue('image', node, tensorMap, context) as Tensor;\n          const boxes =\n              getParamValue('boxes', node, tensorMap, context) as Tensor;\n          const boxInd =\n              getParamValue('boxInd', node, tensorMap, context) as Tensor;\n          const cropSize =\n              getParamValue('cropSize', node, tensorMap, context) as number[];\n          const method =\n              getParamValue('method', node, tensorMap, context) as string;\n          const extrapolationValue =\n              getParamValue('extrapolationValue', node, tensorMap, context) as\n              number;\n          return [ops.image.cropAndResize(\n              image as Tensor4D, boxes as Tensor2D, boxInd as Tensor1D,\n              cropSize as [number, number], method as 'bilinear' | 'nearest',\n              extrapolationValue)];\n        }\n        case 'ImageProjectiveTransformV3': {\n          const images =\n              getParamValue('images', node, tensorMap, context) as Tensor;\n          const transforms =\n              getParamValue('transforms', node, tensorMap, context) as Tensor;\n          const outputShape =\n              getParamValue('outputShape', node, tensorMap, context) as\n              number[];\n          const fillValue =\n              getParamValue('fillValue', node, tensorMap, context) as number;\n          const interpolation =\n              getParamValue('interpolation', node, tensorMap, context) as\n              string;\n          const fillMode =\n              getParamValue('fillMode', node, tensorMap, context) as string;\n          return [ops.image.transform(\n              images as Tensor4D,\n              transforms as Tensor2D,\n              interpolation.toLowerCase() as 'bilinear' | 'nearest',\n              fillMode.toLowerCase() as 'constant' | 'reflect' | 'wrap' | 'nearest',\n              fillValue,\n              outputShape as [number, number])];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Equal': {\n          return [ops.equal(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'NotEqual': {\n          return [ops.notEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Greater': {\n          return [ops.greater(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'GreaterEqual': {\n          return [ops.greaterEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Less': {\n          return [ops.less(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LessEqual': {\n          return [ops.lessEqual(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalAnd': {\n          return [ops.logicalAnd(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalNot': {\n          return [ops.logicalNot(\n              getParamValue('a', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogicalOr': {\n          return [ops.logicalOr(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'Select':\n        case 'SelectV2': {\n          return [ops.where(\n              getParamValue('condition', node, tensorMap, context) as Tensor,\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        case 'BitwiseAnd': {\n          return [ops.bitwiseAnd(\n              getParamValue('a', node, tensorMap, context) as Tensor,\n              getParamValue('b', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'BatchMatMul':\n        case 'BatchMatMulV2':\n        case 'MatMul':\n          return [ops.matMul(\n              getParamValue('a', node, tensorMap, context) as Tensor2D,\n              getParamValue('b', node, tensorMap, context) as Tensor2D,\n              getParamValue('transposeA', node, tensorMap, context) as boolean,\n              getParamValue('transposeB', node, tensorMap, context) as\n                  boolean)];\n\n        case 'Einsum':\n          return [ops.einsum(\n              getParamValue('equation', node, tensorMap, context) as string,\n              ...getParamValue('tensors', node, tensorMap, context) as\n                  Tensor[])];\n\n        case 'Transpose':\n          return [ops.transpose(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('perm', node, tensorMap, context) as number[])];\n\n        case '_FusedMatMul':\n          const [extraOp, activationFunc] =\n              (getParamValue('fusedOps', node, tensorMap, context) as string[]);\n\n          const isBiasAdd = extraOp === 'biasadd';\n          const isPrelu = activationFunc === 'prelu';\n\n          const numArgs =\n              (getParamValue('numArgs', node, tensorMap, context) as number);\n          const leakyreluAlpha =\n              getParamValue('leakyreluAlpha', node, tensorMap, context) as\n              number;\n\n          if (isBiasAdd) {\n            if (isPrelu && numArgs !== 2) {\n              throw new Error(\n                  'Fused MatMul with BiasAdd and Prelu must have two ' +\n                  'extra arguments: bias and alpha.');\n            }\n            if (!isPrelu && numArgs !== 1) {\n              throw new Error(\n                  'Fused MatMul with BiasAdd must have one extra argument: bias.');\n            }\n          }\n          const [biasArg, preluArg] =\n              getParamValue('args', node, tensorMap, context) as Tensor[];\n          return [ops.fused.matMul({\n            a: getParamValue('a', node, tensorMap, context) as Tensor2D,\n            b: getParamValue('b', node, tensorMap, context) as Tensor2D,\n            transposeA: getParamValue('transposeA', node, tensorMap, context) as\n                boolean,\n            transposeB: getParamValue('transposeB', node, tensorMap, context) as\n                boolean,\n            bias: biasArg,\n            activation: activationFunc as tfOps.fused.Activation,\n            preluActivationWeights: preluArg,\n            leakyreluAlpha\n          })];\n\n        case 'MatrixBandPart':\n          return [ops.linalg.bandPart(\n              getParamValue('a', node, tensorMap, context) as Tensor2D,\n              getParamValue('numLower', node, tensorMap, context) as Scalar,\n              getParamValue('numUpper', node, tensorMap, context) as Scalar)];\n\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor3D, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'EuclideanNorm':\n          return [ops.euclideanNorm(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('axis', node, tensorMap, context) as number[],\n              getParamValue('keepDims', node, tensorMap, context) as boolean)];\n        case 'FusedBatchNorm':\n        case 'FusedBatchNormV2': {\n          return [ops.batchNorm(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('mean', node, tensorMap, context) as Tensor,\n              getParamValue('variance', node, tensorMap, context) as Tensor,\n              getParamValue('offset', node, tensorMap, context) as Tensor,\n              getParamValue('scale', node, tensorMap, context) as Tensor,\n              getParamValue('epsilon', node, tensorMap, context) as number)];\n        }\n        case 'FusedBatchNormV3': {\n          return [ops.batchNorm(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('mean', node, tensorMap, context) as Tensor,\n              getParamValue('variance', node, tensorMap, context) as Tensor,\n              getParamValue('offset', node, tensorMap, context) as Tensor,\n              getParamValue('scale', node, tensorMap, context) as Tensor,\n              getParamValue('epsilon', node, tensorMap, context) as number)];\n        }\n        case 'LRN': {\n          return [ops.localResponseNormalization(\n              getParamValue('x', node, tensorMap, context) as Tensor3D |\n                  Tensor4D,\n              getParamValue('radius', node, tensorMap, context) as number,\n              getParamValue('bias', node, tensorMap, context) as number,\n              getParamValue('alpha', node, tensorMap, context) as number,\n              getParamValue('beta', node, tensorMap, context) as number)];\n        }\n        case 'Softmax': {\n          return [ops.softmax(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        case 'LogSoftmax': {\n          return [ops.logSoftmax(\n              getParamValue('x', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'RaggedGather': {\n          const {\n            outputNestedSplits,\n            outputDenseValues,\n          } =\n              ops.raggedGather(\n                  getParamValue(\n                      'paramsNestedSplits', node, tensorMap, context) as\n                      Tensor[],\n                  getParamValue(\n                      'paramsDenseValues', node, tensorMap, context) as Tensor,\n                  getParamValue('indices', node, tensorMap, context) as Tensor,\n                  getParamValue('outputRaggedRank', node, tensorMap, context) as\n                      number);\n          return outputNestedSplits.concat(outputDenseValues);\n        }\n        case 'RaggedRange': {\n          const {rtNestedSplits, rtDenseValues} = ops.raggedRange(\n              getParamValue('starts', node, tensorMap, context) as Tensor,\n              getParamValue('limits', node, tensorMap, context) as Tensor,\n              getParamValue('splits', node, tensorMap, context) as Tensor);\n          return [rtNestedSplits, rtDenseValues];\n        }\n        case 'RaggedTensorToTensor': {\n          return [ops.raggedTensorToTensor(\n              getParamValue('shape', node, tensorMap, context) as Tensor,\n              getParamValue('values', node, tensorMap, context) as Tensor1D,\n              getParamValue('defaultValue', node, tensorMap, context) as Tensor,\n              getParamValue('rowPartitionTensors', node, tensorMap, context) as\n                  Tensor[],\n              getParamValue('rowPartitionTypes', node, tensorMap, context) as\n                  string[])];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'ragged';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Max': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.max(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Mean': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.mean(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Min': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.min(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Sum': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.sum(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'All': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.all(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Any': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.any(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'ArgMax': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [ops.argMax(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'ArgMin': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [ops.argMin(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'Prod': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const keepDims =\n              getParamValue('keepDims', node, tensorMap, context) as boolean;\n          return [ops.prod(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              keepDims)];\n        }\n        case 'Cumprod': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const exclusive =\n              getParamValue('exclusive', node, tensorMap, context) as boolean;\n          const reverse =\n              getParamValue('reverse', node, tensorMap, context) as boolean;\n          return [ops.cumprod(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              exclusive, reverse)];\n        }\n        case 'Cumsum': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const exclusive =\n              getParamValue('exclusive', node, tensorMap, context) as boolean;\n          const reverse =\n              getParamValue('reverse', node, tensorMap, context) as boolean;\n          return [ops.cumsum(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis,\n              exclusive, reverse)];\n        }\n        case 'Bincount':\n          const x = getParamValue('x', node, tensorMap, context) as Tensor1D;\n          const weights =\n              getParamValue('weights', node, tensorMap, context) as Tensor1D;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number;\n\n          return [ops.bincount(x, weights, size)];\n        case 'DenseBincount': {\n          const x = getParamValue('x', node, tensorMap, context) as Tensor1D |\n              Tensor2D;\n          const weights =\n              getParamValue('weights', node, tensorMap, context) as Tensor1D |\n              Tensor2D;\n          const size =\n              getParamValue('size', node, tensorMap, context) as number;\n\n          const binaryOutput =\n              getParamValue('binaryOutput', node, tensorMap, context) as\n              boolean;\n\n          return [ops.denseBincount(x, weights, size, binaryOutput)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D, tidy, util} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'ConcatV2':\n        case 'Concat': {\n          const n = getParamValue('n', node, tensorMap, context) as number;\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          let inputs =\n              getParamValue('tensors', node, tensorMap, context) as Tensor[];\n          inputs = inputs.slice(0, n);\n          return [ops.concat(inputs, axis)];\n        }\n        case 'Gather': {\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          return [ops.gather(input, ops.cast(indices, 'int32'), 0)];\n        }\n        case 'GatherV2': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const batchDims =\n              getParamValue('batchDims', node, tensorMap, context) as number;\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor1D;\n          return [ops.gather(\n              input, ops.cast(indices, 'int32'), axis, batchDims)];\n        }\n        case 'Reverse': {\n          const dims =\n              getParamValue('dims', node, tensorMap, context) as boolean[];\n          const axis = [];\n          for (let i = 0; i < dims.length; i++) {\n            if (dims[i]) {\n              axis.push(i);\n            }\n          }\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [ops.reverse(input, axis)];\n        }\n        case 'ReverseV2': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          const input = getParamValue('x', node, tensorMap, context) as Tensor;\n          return [ops.reverse(input, axis)];\n        }\n        case 'Slice': {\n          // tslint:disable-next-line:no-any\n          const begin = getParamValue('begin', node, tensorMap, context) as any;\n          // tslint:disable-next-line:no-any\n          const size = getParamValue('size', node, tensorMap, context) as any;\n          return [ops.slice(\n              getParamValue('x', node, tensorMap, context) as Tensor, begin,\n              size)];\n        }\n        case 'StridedSlice': {\n          const begin =\n              getParamValue('begin', node, tensorMap, context) as number[];\n          const end =\n              getParamValue('end', node, tensorMap, context) as number[];\n          const strides =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const beginMask =\n              getParamValue('beginMask', node, tensorMap, context) as number;\n          const endMask =\n              getParamValue('endMask', node, tensorMap, context) as number;\n          const ellipsisMask =\n              getParamValue('ellipsisMask', node, tensorMap, context) as number;\n          const newAxisMask =\n              getParamValue('newAxisMask', node, tensorMap, context) as number;\n          const shrinkAxisMask =\n              getParamValue('shrinkAxisMask', node, tensorMap, context) as\n              number;\n          const tensor = getParamValue('x', node, tensorMap, context) as Tensor;\n\n          return [ops.stridedSlice(\n              tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n              newAxisMask, shrinkAxisMask)];\n        }\n        case 'Pack': {\n          return tidy(() => {\n            const axis =\n                getParamValue('axis', node, tensorMap, context) as number;\n            const tensors =\n                getParamValue('tensors', node, tensorMap, context) as Tensor[];\n            // Reshape the tensors to the first tensor's shape if they don't\n            // match.\n            const shape = tensors[0].shape;\n            const squeezedShape = ops.squeeze(tensors[0]).shape;\n            const mapped = tensors.map(tensor => {\n              const sameShape = util.arraysEqual(tensor.shape, shape);\n              if (!sameShape &&\n                  !util.arraysEqual(ops.squeeze(tensor).shape, squeezedShape)) {\n                throw new Error('the input tensors shape does not match');\n              }\n              return sameShape ? tensor : ops.reshape(tensor, shape);\n            });\n            return [ops.stack(mapped, axis)];\n          });\n        }\n        case 'Unpack': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const tensor =\n              getParamValue('tensor', node, tensorMap, context) as Tensor;\n          return ops.unstack(tensor, axis);\n        }\n        case 'Tile': {\n          const reps =\n              getParamValue('reps', node, tensorMap, context) as number[];\n          return [ops.tile(\n              getParamValue('x', node, tensorMap, context) as Tensor, reps)];\n        }\n        case 'Split':\n        case 'SplitV': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          const numOrSizeSplits =\n              getParamValue('numOrSizeSplits', node, tensorMap, context) as\n                  number |\n              number[];\n          const tensor = getParamValue('x', node, tensorMap, context) as Tensor;\n\n          return ops.split(tensor, numOrSizeSplits, axis);\n        }\n        case 'ScatterNd': {\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor;\n          const values =\n              getParamValue('values', node, tensorMap, context) as Tensor;\n          const shape =\n              getParamValue('shape', node, tensorMap, context) as number[];\n          return [ops.scatterND(indices, values, shape)];\n        }\n        case 'GatherNd': {\n          const x = getParamValue('x', node, tensorMap, context) as Tensor;\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor;\n          return [ops.gatherND(x, indices)];\n        }\n        case 'SparseToDense': {\n          const indices =\n              getParamValue('sparseIndices', node, tensorMap, context) as\n              Tensor;\n          const shape =\n              getParamValue('outputShape', node, tensorMap, context) as\n              number[];\n          const sparseValues =\n              getParamValue('sparseValues', node, tensorMap, context) as Tensor;\n          const defaultValue =\n              getParamValue('defaultValue', node, tensorMap, context) as Scalar;\n          return [ops.sparseToDense(\n              indices, sparseValues, shape,\n              sparseValues.dtype === defaultValue.dtype ?\n                  defaultValue :\n                  ops.cast(defaultValue, sparseValues.dtype))];\n        }\n        case 'TensorScatterUpdate': {\n          const indices =\n              getParamValue('indices', node, tensorMap, context) as Tensor;\n          const values =\n              getParamValue('values', node, tensorMap, context) as Tensor;\n          const tensor =\n              getParamValue('tensor', node, tensorMap, context) as Tensor;\n          return [ops.tensorScatterUpdate(tensor, indices, values)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D, Tensor2D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'SparseFillEmptyRows': {\n          const {\n            outputIndices,\n            outputValues,\n            emptyRowIndicator,\n            reverseIndexMap\n          } =\n              ops.sparse.sparseFillEmptyRows(\n                  getParamValue('indices', node, tensorMap, context) as\n                      Tensor2D,\n                  getParamValue('values', node, tensorMap, context) as Tensor1D,\n                  getParamValue('denseShape', node, tensorMap, context) as\n                      Tensor1D,\n                  getParamValue('defaultValue', node, tensorMap, context) as\n                      Scalar);\n          return [\n            outputIndices, outputValues, emptyRowIndicator, reverseIndexMap\n          ];\n        }\n        case 'SparseReshape': {\n          const {outputIndices, outputShape} = ops.sparse.sparseReshape(\n              getParamValue('inputIndices', node, tensorMap, context) as\n                  Tensor2D,\n              getParamValue('inputShape', node, tensorMap, context) as Tensor1D,\n              getParamValue('newShape', node, tensorMap, context) as Tensor1D);\n          return [outputIndices, outputShape];\n        }\n        case 'SparseSegmentMean': {\n          const outputData = ops.sparse.sparseSegmentMean(\n              getParamValue('data', node, tensorMap, context) as Tensor,\n              getParamValue('indices', node, tensorMap, context) as Tensor1D,\n              getParamValue('segmentIds', node, tensorMap, context) as\n                  Tensor1D);\n          return [outputData];\n        }\n        case 'SparseSegmentSum': {\n          const outputData = ops.sparse.sparseSegmentSum(\n              getParamValue('data', node, tensorMap, context) as Tensor,\n              getParamValue('indices', node, tensorMap, context) as Tensor1D,\n              getParamValue('segmentIds', node, tensorMap, context) as\n                  Tensor1D);\n          return [outputData];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'sparse';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n          switch (node.op) {\n            case 'FFT': {\n              return [ops.fft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'IFFT': {\n              return [ops.ifft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'RFFT': {\n              return [ops.rfft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            case 'IRFFT': {\n              return [ops.irfft(\n                  getParamValue('x', node, tensorMap, context) as Tensor)];\n            }\n            default:\n              throw TypeError(`Node type ${node.op} is not implemented`);\n          }\n        };\n\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor, Tensor1D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext, ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'StaticRegexReplace': {\n          return [ops.string.staticRegexReplace(\n            getParamValue('input', node, tensorMap, context) as Tensor,\n            getParamValue('pattern', node, tensorMap, context) as string,\n            getParamValue('rewrite', node, tensorMap, context) as string,\n            getParamValue('replaceGlobal', node, tensorMap, context) as boolean,\n          )];\n        }\n        case 'StringNGrams': {\n          const {nGrams, nGramsSplits} = ops.string.stringNGrams(\n              getParamValue('data', node, tensorMap, context) as Tensor1D,\n              getParamValue('dataSplits', node, tensorMap, context) as Tensor,\n              getParamValue('separator', node, tensorMap, context) as string,\n              getParamValue('nGramWidths', node, tensorMap, context) as\n                  number[],\n              getParamValue('leftPad', node, tensorMap, context) as string,\n              getParamValue('rightPad', node, tensorMap, context) as string,\n              getParamValue('padWidth', node, tensorMap, context) as number,\n              getParamValue(\n                  'preserveShortSequences', node, tensorMap, context) as\n                  boolean);\n          return [nGrams, nGramsSplits];\n        }\n        case 'StringSplit': {\n          const {indices, values, shape} = ops.string.stringSplit(\n              getParamValue('input', node, tensorMap, context) as Tensor1D,\n              getParamValue('delimiter', node, tensorMap, context) as Scalar,\n              getParamValue('skipEmpty', node, tensorMap, context) as boolean);\n          return [indices, values, shape];\n        }\n        case 'StringToHashBucketFast': {\n          const output = ops.string.stringToHashBucketFast(\n              getParamValue('input', node, tensorMap, context) as Tensor,\n              getParamValue('numBuckets', node, tensorMap, context) as number);\n          return [output];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'string';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor, Tensor4D} from '@tensorflow/tfjs-core';\n// tslint:disable-next-line: no-imports-from-dist\nimport * as tfOps from '@tensorflow/tfjs-core/dist/ops/ops_for_converter';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport const executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n     ops = tfOps): Tensor[] => {\n      switch (node.op) {\n        case 'Cast': {\n          return [ops.cast(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('dtype', node, tensorMap, context) as 'int32' |\n                  'float32' | 'bool')];\n        }\n        case 'ExpandDims': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number;\n          return [ops.expandDims(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n        case 'Squeeze': {\n          const axis =\n              getParamValue('axis', node, tensorMap, context) as number[];\n          return [ops.squeeze(\n              getParamValue('x', node, tensorMap, context) as Tensor, axis)];\n        }\n\n        case 'Reshape': {\n          return [ops.reshape(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('shape', node, tensorMap, context) as number[])];\n        }\n        case 'EnsureShape': {\n          return [ops.ensureShape(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('shape', node, tensorMap, context) as number[])];\n        }\n        case 'MirrorPad': {\n          return [ops.mirrorPad(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('padding', node, tensorMap, context) as\n                  Array<[number, number]>,\n              getParamValue('mode', node, tensorMap, context) as 'reflect' |\n                  'symmetric')];\n        }\n        case 'PadV2':\n        case 'Pad': {\n          return [ops.pad(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('padding', node, tensorMap, context) as\n                  Array<[number, number]>,\n              getParamValue('constantValue', node, tensorMap, context) as\n                  number)];\n        }\n        case 'SpaceToBatchND': {\n          const blockShape =\n              getParamValue('blockShape', node, tensorMap, context) as number[];\n          const paddings =\n              getParamValue('paddings', node, tensorMap, context) as number[][];\n          return [ops.spaceToBatchND(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              blockShape, paddings)];\n        }\n        case 'BatchToSpaceND': {\n          const blockShape =\n              getParamValue('blockShape', node, tensorMap, context) as number[];\n          const crops =\n              getParamValue('crops', node, tensorMap, context) as number[][];\n          return [ops.batchToSpaceND(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              blockShape, crops)];\n        }\n        case 'DepthToSpace': {\n          const blockSize =\n              getParamValue('blockSize', node, tensorMap, context) as number;\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as\n               string).toUpperCase() as 'NHWC' |\n              'NCHW';\n          return [ops.depthToSpace(\n              getParamValue('x', node, tensorMap, context) as Tensor4D,\n              blockSize, dataFormat)];\n        }\n        case 'BroadcastTo': {\n          return [ops.broadcastTo(\n              getParamValue('x', node, tensorMap, context) as Tensor,\n              getParamValue('shape', node, tensorMap, context) as number[])];\n        }\n        case 'BroadcastArgs': {\n          return [ops.broadcastArgs(\n              getParamValue('s0', node, tensorMap, context) as Tensor,\n              getParamValue('s1', node, tensorMap, context) as Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\nimport {ResourceManager} from '../executor/resource_manager';\n\nimport {NodeValueImpl} from './custom_op/node_value_impl';\nimport {getRegisteredOp} from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as hashTable from './executors/hash_table_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as ragged from './executors/ragged_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as sparse from './executors/sparse_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as string from './executors/string_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n * @param context contains tensors and information for running the current node.\n * @param resourceManager Optional. Contains global resources of the model.\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n    resourceManager?: ResourceManager, tidy = tfc.tidy): tfc.Tensor[]|\n    Promise<tfc.Tensor[]> {\n  const value =\n      ((node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) => {\n        switch (node.category) {\n          case 'arithmetic':\n            return tidy(() => arithmetic.executeOp(node, tensorMap, context));\n          case 'basic_math':\n            return tidy(() => basicMath.executeOp(node, tensorMap, context));\n          case 'control':\n            return control.executeOp(node, tensorMap, context);\n          case 'convolution':\n            return tidy(() => convolution.executeOp(node, tensorMap, context));\n          case 'creation':\n            return tidy(() => creation.executeOp(node, tensorMap, context));\n          case 'dynamic':\n            return dynamic.executeOp(node, tensorMap, context);\n          case 'evaluation':\n            return tidy(() => evaluation.executeOp(node, tensorMap, context));\n          case 'image':\n            return tidy(() => image.executeOp(node, tensorMap, context));\n          case 'graph':\n            return tidy(() => graph.executeOp(node, tensorMap, context));\n          case 'logical':\n            return tidy(() => logical.executeOp(node, tensorMap, context));\n          case 'matrices':\n            return tidy(() => matrices.executeOp(node, tensorMap, context));\n          case 'normalization':\n            return tidy(\n                () => normalization.executeOp(node, tensorMap, context));\n          case 'ragged':\n            return tidy(() => ragged.executeOp(node, tensorMap, context));\n          case 'reduction':\n            return tidy(() => reduction.executeOp(node, tensorMap, context));\n          case 'slice_join':\n            return tidy(() => sliceJoin.executeOp(node, tensorMap, context));\n          case 'sparse':\n            return tidy(() => sparse.executeOp(node, tensorMap, context));\n          case 'spectral':\n            return tidy(() => spectral.executeOp(node, tensorMap, context));\n          case 'string':\n            return tidy(() => string.executeOp(node, tensorMap, context));\n          case 'transformation':\n            return tidy(\n                () => transformation.executeOp(node, tensorMap, context));\n          case 'hash_table':\n            return hashTable.executeOp(\n                node, tensorMap, context, resourceManager);\n          case 'custom':\n            const opMapper = getRegisteredOp(node.op);\n            if (opMapper && opMapper.customExecutor) {\n              return opMapper.customExecutor(\n                  new NodeValueImpl(node, tensorMap, context));\n            } else {\n              throw TypeError(`Custom op ${node.op} is not registered.`);\n            }\n          default:\n            throw TypeError(\n                `Unknown op '${node.op}'. File an issue at ` +\n                `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                `, or register a custom execution with tf.registerOp()`);\n        }\n      })(node, tensorMap, context);\n  if (tfc.util.isPromise(value)) {\n    return value.then((data) => [].concat(data));\n  }\n  return [].concat(value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap, TensorListMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\nimport {TensorList} from './tensor_list';\nimport {FunctionExecutor} from './types';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      readonly weightMap: NamedTensorsMap = {},\n      readonly tensorArrayMap: TensorArrayMap = {},\n      readonly tensorListMap: TensorListMap = {},\n      readonly functionMap: {[key: string]: FunctionExecutor} = {},\n      readonly parseNodeNameCache?: Map<string, [string, number, string?]>) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]);\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n\n  addTensorList(tensorList: TensorList) {\n    this.tensorListMap[tensorList.id] = tensorList;\n  }\n\n  getTensorList(id: number): TensorList {\n    return this.tensorListMap[id];\n  }\n\n  dispose(keepIds: Set<number>) {\n    for (const key in this.tensorArrayMap) {\n      this.tensorArrayMap[key].clearAndClose(keepIds);\n    }\n\n    for (const key in this.tensorListMap) {\n      this.tensorListMap[key].clearAndClose(keepIds);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorMap} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {parseNodeName} from '../operations/executors/utils';\nimport {Graph, Node} from '../operations/types';\n\nexport interface ExecutionInfo {\n  inputs: NamedTensorMap;\n  outputs: Node[];\n  usedNodes: Set<string>;\n  missingInputs: string[];\n  dynamicNode: Node;\n  syncInputs: string[];\n}\n\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(\n    inputs: NamedTensorMap, outputs: Node[], weightMap: NamedTensorsMap,\n    initNodes?: Node[]): ExecutionInfo {\n  const usedNodes = new Set<string>();\n  const missingInputs: string[] = [];\n  let dynamicNode: Node = null;\n  let syncInputs: string[] = null;\n\n  // Start with the outputs, going backwards and find all the nodes that are\n  // needed to compute those outputs.\n  const seen = new Set<string>();\n  const inputNodeNames =\n      new Set(Object.keys(inputs).map((name) => parseNodeName(name)[0]));\n\n  initNodes = initNodes || [];\n  const initNodeNames =\n      new Set(initNodes.map((node) => parseNodeName(node.name)[0]));\n\n  const frontier = [...outputs];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    if (isControlFlow(node) || isDynamicShape(node) || isHashTable(node)) {\n      if (dynamicNode == null) {\n        dynamicNode = node;\n        syncInputs = dynamicNode.children.map(child => child.name)\n                         .filter(name => usedNodes.has(name));\n      }\n    }\n    usedNodes.add(node.name);\n\n    // Weights are dead end since we already have their values.\n    if (weightMap[node.name] != null) {\n      continue;\n    }\n    // This node is a dead end since it's one of the user-provided inputs.\n    if (inputNodeNames.has(node.name)) {\n      continue;\n    }\n    // This node is a dead end since it doesn't have any inputs.\n    if (initNodeNames.has(node.name)) {\n      continue;\n    }\n    if (node.inputs.length === 0) {\n      missingInputs.push(node.name);\n      continue;\n    }\n    node.inputs.forEach(input => {\n      // Don't add to the frontier if it is already there.\n      if (seen.has(input.name)) {\n        return;\n      }\n      seen.add(input.name);\n      frontier.push(input);\n    });\n  }\n  return {inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs};\n}\n\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(\n    graph: Graph, executionInfo: ExecutionInfo): Node[] {\n  const {usedNodes, inputs} = executionInfo;\n  const inputNodes = Object.keys(inputs)\n                         .map(name => parseNodeName(name)[0])\n                         .map(name => graph.nodes[name]);\n  const initNodes = graph.initNodes || [];\n\n  const isUsed = (node: Node|string) =>\n      usedNodes.has(typeof node === 'string' ? node : node.name);\n\n  function unique(nodes: Node[]): Node[] {\n    return [...new Map(nodes.map((node) => [node.name, node])).values()];\n  }\n  const predefinedNodes = unique([\n                            ...inputNodes,\n                            ...graph.weights,\n                            ...initNodes,\n                          ]).filter(isUsed);\n  const allNodes = unique([\n                     ...predefinedNodes,\n                     ...Object.values(graph.nodes),\n                   ]).filter(isUsed);\n  const nameToNode =\n      new Map<string, Node>(allNodes.map((node) => [node.name, node]));\n\n  const inCounts: Record<string, number> = {};\n  for (const node of allNodes) {\n    inCounts[node.name] = inCounts[node.name] || 0;\n    for (const child of node.children) {\n      // When the child is unused, set in counts to infinity so that it will\n      // never be decreased to 0 and added to the execution list.\n      if (!isUsed(child)) {\n        inCounts[child.name] = Number.POSITIVE_INFINITY;\n      }\n      inCounts[child.name] = (inCounts[child.name] || 0) + 1;\n    }\n  }\n\n  // Build execution order for all used nodes regardless whether they are\n  // predefined or not.\n  const frontier = Object.entries(inCounts)\n                       .filter(([, inCount]) => inCount === 0)\n                       .map(([name]) => name);\n  const orderedNodeNames = [...frontier];\n  while (frontier.length > 0) {\n    const nodeName = frontier.pop();\n    const node = nameToNode.get(nodeName)!;\n    for (const child of node.children.filter(isUsed)) {\n      if (--inCounts[child.name] === 0) {\n        orderedNodeNames.push(child.name);\n        frontier.push(child.name);\n      }\n    }\n  }\n\n  const orderedNodes = orderedNodeNames.map((name) => nameToNode.get(name));\n  const filteredOrderedNodes =\n      filterPredefinedReachableNodes(orderedNodes, predefinedNodes);\n\n  // TODO: Turn validation on/off with tf env flag.\n  validateNodesExecutionOrder(filteredOrderedNodes, predefinedNodes);\n\n  return filteredOrderedNodes;\n}\n\n/**\n * This is a helper function of `getNodesInTopologicalOrder`.\n * Returns ordered nodes reachable by at least one predefined node.\n * This can help us filter out redundant nodes from the returned node list.\n * For example:\n * If we have four nodes with dependencies like this:\n *   a --> b --> c --> d\n * when node `c` is predefined (e.g. given as an input tensor), we can\n * skip node `a` and `b` since their outputs will never be used.\n *\n * @param orderedNodes Graph nodes in execution order.\n * @param predefinedNodes Graph inputs, weights, and init nodes. Nodes in this\n *     list must have distinct names.\n */\nfunction filterPredefinedReachableNodes(\n    orderedNodes: Node[], predefinedNodes: Node[]) {\n  const nameToNode =\n      new Map<string, Node>(orderedNodes.map((node) => [node.name, node]));\n\n  // TODO: Filter out more nodes when >=2 nodes are predefined in a path.\n  const stack = predefinedNodes.map((node) => node.name);\n  const predefinedReachableNodeNames = new Set(stack);\n  // Perform a DFS starting from the set of all predefined nodes\n  // to find the set of all nodes reachable from the predefined nodes.\n  while (stack.length > 0) {\n    const nodeName = stack.pop();\n    const node = nameToNode.get(nodeName)!;\n    for (const child of node.children) {\n      if (!nameToNode.has(child.name) ||\n          predefinedReachableNodeNames.has(child.name)) {\n        continue;\n      }\n      predefinedReachableNodeNames.add(child.name);\n      stack.push(child.name);\n    }\n  }\n\n  // Filter out unreachable nodes and build the ordered node list.\n  const filteredOrderedNodes = orderedNodes.filter(\n      (node) => predefinedReachableNodeNames.has(node.name));\n\n  return filteredOrderedNodes;\n}\n\nclass NodesExecutionOrderError extends Error {\n  constructor(message: string) {\n    super(`NodesExecutionOrderError: ${message}`);\n  }\n}\n\n/**\n * This is a helper function of `getNodesInTopologicalOrder`.\n * Validates property: given nodes `a` and `b`, Order(a) > Order(b) if `a`\n * is a child of `b`. This function throws an error if validation fails.\n *\n * @param orderedNodes Graph nodes in execution order.\n * @param predefinedNodes Graph inputs, weights, and init nodes. Nodes in this\n *     list must have distinct names.\n */\nfunction validateNodesExecutionOrder(\n    orderedNodes: Node[], predefinedNodes: Node[]) {\n  const nodeNameToOrder = new Map<string, number>(\n      orderedNodes.map((node, order) => [node.name, order]));\n  const predefinedNodeNames = new Set(predefinedNodes.map((node) => node.name));\n  const isPredefined = (node: Node|string) =>\n      predefinedNodeNames.has(typeof node === 'string' ? node : node.name);\n  const willBeExecutedNodeNames =\n      new Set(orderedNodes.map((node) => node.name));\n  const willBeExecuted = (node: Node|string) =>\n      willBeExecutedNodeNames.has(typeof node === 'string' ? node : node.name);\n\n  for (const node of orderedNodes) {\n    for (const child of node.children.filter(willBeExecuted)) {\n      if (!nodeNameToOrder.has(child.name)) {\n        throw new NodesExecutionOrderError(\n            `Child ${child.name} of node ${node.name} is unreachable.`);\n      }\n      if (nodeNameToOrder.get(node.name) > nodeNameToOrder.get(child.name)) {\n        throw new NodesExecutionOrderError(`Node ${\n            node.name} is scheduled to run after its child ${child.name}.`);\n      }\n    }\n    if (!isPredefined(node)) {\n      for (const input of node.inputs) {\n        if (!nodeNameToOrder.has(input.name)) {\n          throw new NodesExecutionOrderError(\n              `Input ${input.name} of node ${node.name} is unreachable.`);\n        }\n        if (nodeNameToOrder.get(input.name) > nodeNameToOrder.get(node.name)) {\n          throw new NodesExecutionOrderError(`Node ${\n              node.name} is scheduled to run before its input ${input.name}.`);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Given the execution info, return a map from node name to the disposable\n * node name list after its execution.\n *\n * @returns A map from node name to disposable nodes after its\n *     execution. That is, for a node `x`, `nodeLiveUntilMap[x]` indicates\n *     all nodes which their intermediate tensors should be disposed after `x`\n *     being executed.\n */\nexport function getNodeLiveUntilMap(orderedNodes: Node[]): Map<string, Node[]> {\n  const nodeNameToOrder = new Map<string, number>(\n      orderedNodes.map((node, order) => [node.name, order]));\n\n  const INF_LIFE = Number.MAX_SAFE_INTEGER;\n  // Make control flow nodes (and consequently their direct parents)\n  // live forever since they're tricky to track correctly.\n  const selfLifespans = orderedNodes.map(\n      (node, nodeOrder) => isControlFlow(node) ? INF_LIFE : nodeOrder);\n  const getSelfLifeSpan = (node: Node) => {\n    const selfLife = selfLifespans[nodeNameToOrder.get(node.name)!];\n    if (selfLife == null) {\n      // If nodeToOrder does not contain the node, it is unused or\n      // unreachable in graph.\n      return -1;\n    }\n    return selfLife;\n  };\n\n  // `liveUntil[i]` points to the last node in the `orderedNodes` array that\n  // may depend on tensors from node `i`. It indicates that all the\n  // intermediate tensors from `orderedNodes[i]` should be disposed after\n  // `orderedNodes[liveUntil[i]]` is executed.\n  // A node lives long enough to pass on its tensors to its children.\n  // It lives until at least `max(node's position, children's positions)`.\n  const liveUntilOrders = orderedNodes.map((node, nodeOrder) => {\n    return node.children.map(getSelfLifeSpan)\n        .reduce((a, b) => Math.max(a, b), selfLifespans[nodeOrder]);\n  });\n\n  // liveUntilMap:\n  // - Key: Name of a node `x`\n  // - Values: All nodes whose intermediate tensors should be disposed\n  //           after `x` is executed.\n  const liveUntilMap = new Map<string, Node[]>();\n  for (let nodeOrder = 0; nodeOrder < orderedNodes.length; ++nodeOrder) {\n    const liveUntilOrder = liveUntilOrders[nodeOrder];\n    if (liveUntilOrder === INF_LIFE) {\n      continue;\n    }\n    const node = orderedNodes[nodeOrder];\n    const liveUntilNode = orderedNodes[liveUntilOrder];\n    if (!liveUntilMap.has(liveUntilNode.name)) {\n      liveUntilMap.set(liveUntilNode.name, []);\n    }\n    liveUntilMap.get(liveUntilNode.name)!.push(node);\n  }\n  return liveUntilMap;\n}\n\nconst CONTROL_FLOW_OPS = new Set([\n  'Switch', 'Merge', 'Enter', 'Exit', 'NextIteration', 'StatelessIf',\n  'StatelessWhile', 'if', 'While'\n]);\nconst DYNAMIC_SHAPE_OPS = new Set([\n  'NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'NonMaxSuppressionV5', 'Where'\n]);\nconst HASH_TABLE_OPS = new Set([\n  'HashTable', 'HashTableV2', 'LookupTableImport', 'LookupTableImportV2',\n  'LookupTableFind', 'LookupTableFindV2', 'LookupTableSize', 'LookupTableSizeV2'\n]);\n\nexport function isControlFlow(node: Node) {\n  return CONTROL_FLOW_OPS.has(node.op);\n}\n\nexport function isDynamicShape(node: Node) {\n  return DYNAMIC_SHAPE_OPS.has(node.op);\n}\n\nexport function isHashTable(node: Node) {\n  return HASH_TABLE_OPS.has(node.op);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, env, keep, NamedTensorMap, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {ISignatureDef} from '../data/compiled_api';\nimport {NamedTensorsMap, TensorArrayMap, TensorInfo, TensorListMap} from '../data/types';\nimport {getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContext, parseNodeName} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\nimport {getExecutionSubgraph, getNodeLiveUntilMap, getNodesInTopologicalOrder, isControlFlow} from './model_analysis';\nimport {ResourceManager} from './resource_manager';\nimport {FunctionExecutor} from './types';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor implements FunctionExecutor {\n  private compiledMap = new Map<string, ReturnType<typeof this.compile>>();\n  private parseNodeNameCache = new Map<string, [string, number, string?]>();\n  private _weightMap: NamedTensorsMap = {};\n  private _weightIds: number[];\n  private _signature: ISignatureDef;\n  private _inputs: Node[];\n  private _outputs: Node[];\n  private _initNodes: Node[];  // Internal init nodes to start initialization.\n  private SEPARATOR = ',';\n  private _functions: {[key: string]: Graph} = {};\n  private _functionExecutorMap: {[key: string]: FunctionExecutor} = {};\n  private _resourceManager: ResourceManager;\n  private clonedTensorsMap: NamedTensorsMap;\n  private keepIntermediateTensors = false;\n\n  get weightIds(): number[] {\n    return this.parent ? this.parent.weightIds : this._weightIds;\n  }\n\n  get functionExecutorMap(): {[key: string]: FunctionExecutor} {\n    return this.parent ? this.parent.functionExecutorMap :\n                         this._functionExecutorMap;\n  }\n\n  get weightMap(): NamedTensorsMap {\n    return this.parent ? this.parent.weightMap : this._weightMap;\n  }\n\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this._weightIds = [].concat(...weightIds);\n    this._weightMap = weightMap;\n  }\n\n  /**\n   * Set `ResourceManager` shared by executors of a model.\n   * @param resourceManager: `ResourceManager` of the `GraphModel`.\n   */\n  set resourceManager(resourceManager: ResourceManager) {\n    this._resourceManager = resourceManager;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this._inputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this._inputs.map(node => node.signatureKey || node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this._outputs.map((node) => {\n      const name = node.signatureKey || node.name;\n      return node.defaultOutput ? (`${name}:${node.defaultOutput}`) : name;\n    });\n  }\n\n  get functions(): {[key: string]: ISignatureDef} {\n    return Object.keys(this._functions).reduce((map, key) => {\n      map[key] = this._functions[key].signature;\n      return map;\n    }, {} as {[key: string]: ISignatureDef});\n  }\n\n  /**\n   *\n   * @param graph Graph the model or function graph to be executed.\n   * @param parent When building function exector you need to set the parent\n   * executor. Since the weights and function executor maps are set at parant\n   * level, that function executor can access the function maps and weight maps\n   * through the parent.\n   */\n  constructor(private graph: Graph, private parent?: GraphExecutor) {\n    this._outputs = graph.outputs;\n    this._inputs = graph.inputs;\n    this._initNodes = graph.initNodes;\n    this._signature = graph.signature;\n    this._functions = graph.functions;\n    // create sub-graph executors\n    if (graph.functions != null) {\n      Object.keys(graph.functions).forEach(name => {\n        this._functionExecutorMap[name] =\n            new GraphExecutor(graph.functions[name], this);\n      });\n    }\n  }\n\n  private getCompilationKey(inputs: Node[], outputs: Node[]): string {\n    const sortedInputs = inputs.map(node => node.name).sort();\n    const sortedOutputs = outputs.map(node => node.name).sort();\n    return sortedInputs.join(this.SEPARATOR) + '--' +\n        sortedOutputs.join(this.SEPARATOR);\n  }\n\n  /**\n   * Compiles the inference graph and returns the minimal set of nodes that are\n   * required for execution, in the correct execution order.\n   * @returns {Object} compilation The compile result.\n   * @returns {Node[]} compilation.orderedNodes Nodes in the correct execution\n   *     order.\n   * @returns {Map<string, Node[]>} compilation.nodeLiveUntilMap A map from node\n   *     to disposable nodes after its execution. That is, for a node `x`,\n   *     `nodeLiveUntilMap[x]` indicates all nodes whose intermediate\n   *     tensors should be disposed after `x` is executed.\n   */\n  private compile(inputs: NamedTensorMap, outputs: Node[]):\n      {orderedNodes: Node[], nodeLiveUntilMap: Map<string, Node[]>} {\n    const executionInfo =\n        getExecutionSubgraph(inputs, outputs, this.weightMap, this._initNodes);\n    const {missingInputs, dynamicNode, syncInputs} = executionInfo;\n    if (dynamicNode != null) {\n      throw new Error(\n          `This execution contains the node '${dynamicNode.name}', which has ` +\n          `the dynamic op '${dynamicNode.op}'. Please use ` +\n          `model.executeAsync() instead. Alternatively, to avoid the ` +\n          `dynamic ops, specify the inputs [${syncInputs}]`);\n    }\n\n    if (missingInputs.length > 0) {\n      const outNames = outputs.map(n => n.name);\n      const inNames = Object.keys(inputs);\n      throw new Error(\n          `Cannot compute the outputs [${outNames}] from the provided inputs ` +\n          `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n    }\n\n    const orderedNodes = getNodesInTopologicalOrder(this.graph, executionInfo);\n    const nodeLiveUntilMap = getNodeLiveUntilMap(orderedNodes);\n    return {orderedNodes, nodeLiveUntilMap};\n  }\n\n  private cloneAndKeepTensor(tensor: Tensor) {\n    if (tensor == null) {\n      return null;\n    }\n    const clone = tensor.clone();\n    // Keep the clone because`model.execute()` may be called within\n    // a `tidy()`, but the user may inspect these tensors after the\n    // tidy.\n    keep(clone);\n    return clone;\n  }\n\n  private cloneTensorList(tensors: Tensor[]) {\n    if (!tensors) {\n      return null;\n    }\n    const clonedTensor = tensors.map(tensor => {\n      return this.cloneAndKeepTensor(tensor);\n    });\n    return clonedTensor;\n  }\n\n  private cloneTensorMap(tensorsMap: NamedTensorsMap): NamedTensorsMap {\n    return Object.fromEntries(\n        Object.entries(tensorsMap).map(([name, tensorsList]) => {\n          return [name, this.cloneTensorList(tensorsList)];\n        }));\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs Optional. output node name from the Tensorflow model, if\n   * no outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   */\n  execute(inputs: NamedTensorMap, outputs?: string[]): Tensor[] {\n    // Dispose any tensors from a prior run to avoid leaking them.\n    this.disposeIntermediateTensors();\n    inputs = this.mapInputs(inputs);\n    const names = Object.keys(inputs).sort();\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    outputs = this.mapOutputs(outputs);\n    this.checkOutputs(outputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodeNames = outputs.map(name => parseNodeName(name)[0]);\n    const outputNodeNameSet = new Set(outputNodeNames);\n    let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n    // If no outputs are specified, then use the default outputs of the model.\n    if (outputNodes.length === 0) {\n      outputNodes = this._outputs;\n    }\n\n    const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n\n    // Do nothing if the compiled graph cache contains the input.\n    let compilation = this.compiledMap.get(compilationKey);\n    if (compilation == null) {\n      compilation = this.compile(inputs, outputNodes);\n      this.compiledMap.set(compilationKey, compilation);\n    }\n\n    // Keep tensors if KEEP_INTERMEDIATE_TENSORS is on.\n    try {\n      this.keepIntermediateTensors = env().getBool('KEEP_INTERMEDIATE_TENSORS');\n    } catch (e) {\n      this.keepIntermediateTensors = false;\n      console.warn(e.message);\n    }\n    const tensorArrayMap: TensorArrayMap = {};\n    const tensorListMap: TensorListMap = {};\n\n    return tidy(() => {\n      const context = new ExecutionContext(\n          this.weightMap, tensorArrayMap, tensorListMap,\n          this.functionExecutorMap, this.parseNodeNameCache);\n      const tensorsMap: NamedTensorsMap = {...this.weightMap};\n      if (this.keepIntermediateTensors) {\n        this.clonedTensorsMap = this.cloneTensorMap(this.weightMap);\n      }\n\n      Object.keys(inputs).forEach(name => {\n        const [nodeName, index] = parseNodeName(name, context);\n        const tensors: Tensor[] = [];\n        tensors[index] = inputs[name];\n        tensorsMap[nodeName] = tensors;\n        if (this.keepIntermediateTensors) {\n          this.clonedTensorsMap[nodeName] = this.cloneTensorList(tensors);\n        }\n      });\n\n      const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n      const {orderedNodes, nodeLiveUntilMap} = compilation;\n      for (const node of orderedNodes) {\n        if (tensorsMap[node.name]) {\n          continue;\n        }\n        const tensors =\n            executeOp(node, tensorsMap, context, this._resourceManager) as\n            Tensor[];\n        if (util.isPromise(tensors)) {\n          throw new Error(\n              `The execution of the op '${node.op}' returned a promise. ` +\n              `Please use model.executeAsync() instead.`);\n        }\n        tensorsMap[node.name] = tensors;\n        if (this.keepIntermediateTensors) {\n          this.clonedTensorsMap[node.name] = this.cloneTensorList(tensors);\n        }\n        this.checkTensorForDisposalWithNodeLiveUntilInfo(\n            node, tensorsMap, context, tensorsToKeep, outputNodeNameSet,\n            nodeLiveUntilMap.get(node.name));\n      }\n\n      // dispose the context for the root executor\n      if (this.parent == null) {\n        context.dispose(tensorsToKeep);\n      }\n\n      return outputs.map(name => getTensor(name, tensorsMap, context));\n    });\n  }\n\n  private getFrozenTensorIds(tensorMap: NamedTensorsMap): Set<number> {\n    const ids = [].concat.apply(\n        [],\n        Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n    return new Set(ids);\n  }\n\n  private checkTensorForDisposal(\n      nodeName: string, node: Node, tensorMap: NamedTensorsMap,\n      context: ExecutionContext, tensorsToKeep: Set<number>,\n      outputNodeNameSet: Set<string>,\n      intermediateTensorConsumerCount: {[key: string]: number}) {\n    // Skip output nodes and any control flow nodes, since its dependency is\n    // tricky to track correctly.\n    if (isControlFlow(node) || outputNodeNameSet.has(nodeName)) {\n      return;\n    }\n\n    for (const tensor of tensorMap[nodeName]) {\n      if (tensor == null) {\n        continue;\n      }\n      intermediateTensorConsumerCount[tensor.id] =\n          (intermediateTensorConsumerCount[tensor.id] || 0) +\n          node.children.length;\n    }\n\n    for (const input of node.inputs) {\n      // Skip any control flow nodes, since its dependency is tricky to track\n      // correctly.\n      if (isControlFlow(input)) {\n        continue;\n      }\n\n      const tensors =\n          getTensorsForCurrentContext(input.name, tensorMap, context);\n      if (tensors == null) {\n        continue;\n      }\n\n      for (const tensor of tensors) {\n        if (!tensor || tensor.kept || tensorsToKeep.has(tensor.id)) {\n          continue;\n        }\n\n        // Only intermediate nodes' tensors have counts set, not marked as\n        // kept, and not in `tensorsToKeep`.\n        // Input and weight nodes' tensors should exist in `tensorsToKeep`.\n        // Output and control flow nodes' tensors should never have count set.\n        const count = intermediateTensorConsumerCount[tensor.id];\n        if (count === 1) {\n          tensor.dispose();\n          delete intermediateTensorConsumerCount[tensor.id];\n        } else if (count != null) {\n          intermediateTensorConsumerCount[tensor.id]--;\n        }\n      }\n    }\n  }\n\n  private checkTensorForDisposalWithNodeLiveUntilInfo(\n      node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext,\n      tensorsToKeep: Set<number>, outputNodeNameSet: Set<string>,\n      liveUntilNodes?: Node[]) {\n    function isNonDisposableNode(node: Node) {\n      // Skip output nodes and any control flow nodes, since its dependency is\n      // tricky to track correctly.\n      return isControlFlow(node) || outputNodeNameSet.has(node.name);\n    }\n\n    if (isControlFlow(node) || liveUntilNodes == null) {\n      return;\n    }\n\n    for (const nodeToDispose of liveUntilNodes) {\n      if (isNonDisposableNode(nodeToDispose)) {\n        continue;\n      }\n      const tensors = getTensorsForCurrentContext(\n          nodeToDispose.name, tensorMap, context);\n      for (const tensor of tensors) {\n        if (!tensor || tensor.kept || tensorsToKeep.has(tensor.id)) {\n          continue;\n        }\n        tensor.dispose();\n      }\n    }\n  }\n\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorMap, outputs?: string[]):\n      Promise<Tensor[]> {\n    return this._executeAsync(inputs, outputs);\n  }\n\n  disposeIntermediateTensors() {\n    if (!this.clonedTensorsMap) {\n      return;\n    }\n    Object.values(this.clonedTensorsMap).forEach(tensorsList => {\n      for (const tensor of tensorsList) {\n        if (tensor && !tensor.isDisposed) {\n          tensor.dispose();\n        }\n      }\n    });\n\n    this.clonedTensorsMap = null;\n  }\n\n  getIntermediateTensors(): NamedTensorsMap {\n    return this.clonedTensorsMap;\n  }\n\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs Optional. output node name from the Tensorflow model,\n   * if no outputs are specified, the default outputs of the model would be\n   * used. You can inspect intermediate nodes of the model by adding them to\n   * the outputs array.\n   * @param isFunctionExecution Optional. Flag for executing a function.\n   * @param tensorArrayMap Optional, global TensorArray map by id. Used for\n   * function execution.\n   * @param tensorArrayMap Optinal global TensorList map by id. Used for\n   * function execution.\n   */\n  private async _executeAsync(\n      inputs: NamedTensorMap, outputs?: string[], isFunctionExecution = false,\n      tensorArrayMap: TensorArrayMap = {},\n      tensorListMap: TensorListMap = {}): Promise<Tensor[]> {\n    // Dispose any tensors from a prior run to avoid leaking them.\n    this.disposeIntermediateTensors();\n    if (!isFunctionExecution) {\n      inputs = this.mapInputs(inputs);\n      this.checkInputs(inputs);\n      this.checkInputShapeAndType(inputs);\n      outputs = this.mapOutputs(outputs);\n      this.checkOutputs(outputs);\n    }\n\n    // Keep tensors if KEEP_INTERMEDIATE_TENSORS is on.\n    try {\n      this.keepIntermediateTensors = env().getBool('KEEP_INTERMEDIATE_TENSORS');\n    } catch (e) {\n      this.keepIntermediateTensors = false;\n      console.warn(e.message);\n    }\n\n    const context = new ExecutionContext(\n        this.weightMap, tensorArrayMap, tensorListMap, this.functionExecutorMap,\n        this.parseNodeNameCache);\n\n    if (this.keepIntermediateTensors) {\n      this.clonedTensorsMap = this.cloneTensorMap(this.weightMap);\n    }\n\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensorsMap = await this.executeWithControlFlow(\n        inputs, context, outputs, isFunctionExecution);\n    const results = outputs.map(name => getTensor(name, tensorsMap, context));\n\n    // dispose all the intermediate tensors\n    const outputIds = results.map(t => t.id);\n    const inputIds = Object.keys(inputs).map(name => inputs[name].id);\n    const keepIds =\n        new Set<number>([...outputIds, ...inputIds, ...this.weightIds]);\n\n    Object.values(tensorsMap).forEach(tensorsList => {\n      tensorsList.forEach(tensor => {\n        if (tensor && !tensor.isDisposed && !keepIds.has(tensor.id)) {\n          tensor.dispose();\n        }\n      });\n    });\n\n    // dispose the context for the root executor\n    if (this.parent == null) {\n      context.dispose(keepIds);\n    }\n\n    return results;\n  }\n\n  async executeFunctionAsync(\n      inputs: Tensor[], tensorArrayMap: TensorArrayMap,\n      tensorListMap: TensorListMap): Promise<Tensor[]> {\n    const mappedInputs = inputs.reduce((map, tensor, index) => {\n      map[this.inputs[index].name] = tensor;\n      return map;\n    }, {} as NamedTensorMap);\n\n    return this._executeAsync(\n        mappedInputs, this.outputNodes, true, tensorArrayMap, tensorListMap);\n  }\n\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   * @param outputNames Optional. output node name from the Tensorflow model,\n   * if no outputs are specified, the default outputs of the model would be\n   * used. You can inspect intermediate nodes of the model by adding them to\n   * the outputs array.\n   * @param isFunctionExecution Flag for executing a function.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorMap, context: ExecutionContext, outputNames?: string[],\n      isFunctionExecution?: boolean): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes =\n        names.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const outputNodeNames = outputNames.map(name => parseNodeName(name)[0]);\n    const outputNodeNameSet = new Set(outputNodeNames);\n    let outputNodes = outputNodeNames.map(name => this.graph.nodes[name]);\n\n    // If no outputs are specified, then use the default outputs of the model.\n    if (outputNodes.length === 0) {\n      outputNodes = this._outputs;\n    }\n\n    const {usedNodes, missingInputs, dynamicNode, syncInputs} =\n        getExecutionSubgraph(\n            inputs, outputNodes, this.weightMap, this._initNodes);\n\n    // First nodes to execute include inputNodes, weights, and initNodes.\n    const stack: NodeWithContexts[] = [\n      ...inputNodes, ...this.graph.weights, ...(this._initNodes || [])\n    ].map(node => {\n      return {node, contexts: context.currentContext};\n    });\n    const tensorsMap: NamedTensorsMap = {...this.weightMap};\n    Object.keys(inputs).forEach(name => {\n      const [nodeName, index] = parseNodeName(name);\n      const tensors: Tensor[] = [];\n      tensors[index] = inputs[name];\n      tensorsMap[nodeName] = tensors;\n    });\n    const intermediateTensorConsumerCount: {[key: number]: number} = {};\n    const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises = this.processStack(\n          inputNodes, stack, context, tensorsMap, added, tensorsToKeep,\n          outputNodeNameSet, intermediateTensorConsumerCount, usedNodes);\n      await Promise.all(promises);\n    }\n    if (dynamicNode == null && !isFunctionExecution) {\n      console.warn(\n          `This model execution did not contain any nodes with control flow ` +\n          `or dynamic output shapes. You can use model.execute() instead.`);\n    }\n    const missingOutputs =\n        outputNodes\n            .filter(\n                node => !isControlFlow(node) &&\n                    !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n    if (missingOutputs.length > 0) {\n      let alternativeMsg = '';\n      if (dynamicNode != null) {\n        alternativeMsg =\n            `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n            `and specify the inputs [${syncInputs}]`;\n      }\n      throw new Error(\n          `Cannot compute the outputs [${missingOutputs}] from the provided ` +\n          `inputs [${names}]. Consider providing the following inputs: ` +\n          `[${missingInputs}]. ${alternativeMsg}`);\n    }\n    return tensorsMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      tensorsToKeep: Set<number>, outputNodeNameSet: Set<string>,\n      intermediateTensorConsumerCount: {[key: number]: number},\n      usedNodes: Set<string>) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'Enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not in the tensorMap yet, this include\n      // inputNodes and internal initNodes.\n      if (tensorMap[item.node.name] == null) {\n        const tensors =\n            executeOp(item.node, tensorMap, context, this._resourceManager);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n        const currentContext = context.currentContext;\n        if (util.isPromise(tensors)) {\n          promises.push(tensors.then(t => {\n            tensorMap[nodeName] = t;\n            if (this.keepIntermediateTensors) {\n              this.clonedTensorsMap[nodeName] = this.cloneTensorList(t);\n            }\n            context.currentContext = currentContext;\n            this.checkTensorForDisposal(\n                nodeName, item.node, tensorMap, context, tensorsToKeep,\n                outputNodeNameSet, intermediateTensorConsumerCount);\n            this.processChildNodes(\n                item.node, stack, context, tensorMap, added, usedNodes);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors;\n          if (this.keepIntermediateTensors) {\n            this.clonedTensorsMap[nodeName] = this.cloneTensorList(tensors);\n          }\n          this.checkTensorForDisposal(\n              nodeName, item.node, tensorMap, context, tensorsToKeep,\n              outputNodeNameSet, intermediateTensorConsumerCount);\n          this.processChildNodes(\n              item.node, stack, context, tensorMap, added, usedNodes);\n        }\n      } else {\n        this.processChildNodes(\n            item.node, stack, context, tensorMap, added, usedNodes);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      usedNodes: Set<string>) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (added[nodeName] || !usedNodes.has(childNode.name)) {\n        return;\n      }\n      // Merge op can be pushed if any of its inputs has value.\n      if (childNode.op === 'Merge') {\n        if (childNode.inputNames.some(name => {\n              return !!getTensor(name, tensorMap, context);\n            })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      } else  // Otherwise all inputs must to have value.\n          if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n        added[nodeName] = true;\n        stack.push({contexts: context.currentContext, node: childNode});\n      }\n    });\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(inputs: NamedTensorMap) {\n    Object.keys(inputs).forEach(name => {\n      const input = inputs[name];\n      const [nodeName, ] = parseNodeName(name);\n      const node = this.graph.nodes[nodeName];\n      if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n        const shape = node.attrParams['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            () => `The shape of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be [${shape}], but was ` +\n                `[${input.shape}]`);\n      }\n      if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n        util.assert(\n            input.dtype === node.attrParams['dtype'].value as string,\n            () => `The dtype of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be ` +\n                `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private mapInputs(inputs: NamedTensorMap) {\n    const result: NamedTensorMap = {};\n    for (const inputName in inputs) {\n      const tensor = this._signature ?.inputs ?.[inputName];\n      if (tensor != null) {\n        result[tensor.name] = inputs[inputName];\n      } else {\n        result[inputName] = inputs[inputName];\n      }\n    }\n    return result;\n  }\n\n  private checkInputs(inputs: NamedTensorMap) {\n    const notInGraph = Object.keys(inputs).filter(name => {\n      const [nodeName] = parseNodeName(name);\n      return this.graph.nodes[nodeName] == null;\n    });\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] that are not part of graph`);\n    }\n  }\n\n  private mapOutputs(outputs: string[]) {\n    return outputs.map(name => {\n      const tensor = this._signature ?.outputs ?.[name];\n      if (tensor != null) {\n        return tensor.name;\n      }\n      return name;\n    }, {});\n  }\n\n  private checkOutputs(outputs: string[]): void {\n    outputs.forEach(name => {\n      const [normalizedName] = parseNodeName(name);\n      if (!this.graph.nodes[normalizedName]) {\n        throw new Error(`The output '${name}' is not found in the graph`);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {HashTableMap, NamedTensorMap} from '../data/types';\nimport {HashTable} from './hash_table';\n\n/**\n * Contains global resources of a model.\n */\nexport class ResourceManager {\n  constructor(\n      readonly hashTableNameToHandle: NamedTensorMap = {},\n      readonly hashTableMap: HashTableMap = {}) {}\n\n  /**\n   * Register a `HashTable` in the resource manager.\n   *\n   * The `HashTable` can be retrieved by `resourceManager.getHashTableById`,\n   * where id is the table handle tensor's id.\n   *\n   * @param name Op node name that creates the `HashTable`.\n   * @param hashTable The `HashTable` to be added to resource manager.\n   */\n  addHashTable(name: string, hashTable: HashTable) {\n    this.hashTableNameToHandle[name] = hashTable.handle;\n    this.hashTableMap[hashTable.id] = hashTable;\n  }\n\n  /**\n   * Get the table handle by node name.\n   * @param name Op node name that creates the `HashTable`. This name is also\n   *     used in the inputs list of lookup and import `HashTable` ops.\n   */\n  getHashTableHandleByName(name: string) {\n    return this.hashTableNameToHandle[name];\n  }\n\n  /**\n   * Get the actual `HashTable` by its handle tensor's id.\n   * @param id The id of the handle tensor.\n   */\n  getHashTableById(id: number): HashTable {\n    return this.hashTableMap[id];\n  }\n\n  /**\n   * Dispose `ResourceManager`, including its hashTables and tensors in them.\n   */\n  dispose() {\n    for (const key in this.hashTableMap) {\n      this.hashTableMap[key].clearAndClose();\n      delete this.hashTableMap[key];\n    }\n\n    for (const name in this.hashTableNameToHandle) {\n      this.hashTableNameToHandle[name].dispose();\n      delete this.hashTableNameToHandle[name];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {dispose, InferenceModel, io, ModelPredictConfig, NamedTensorMap, Tensor, util} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\nimport {ResourceManager} from './resource_manager';\n\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\ntype Url = string|io.IOHandler|io.IOHandlerSync;\ntype UrlIOHandler<T extends Url> = T extends string ? io.IOHandler : T;\n\n/**\n * A `tf.GraphModel` is a directed, acyclic graph built from a\n * SavedModel GraphDef and allows inference execution.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n *\n * @doc {heading: 'Models', subheading: 'Classes'}\n */\nexport class GraphModel<ModelURL extends Url = string | io.IOHandler> implements\n    InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: UrlIOHandler<ModelURL>;\n  private artifacts: io.ModelArtifacts;\n  private initializer: GraphExecutor;\n  private resourceIdToCapturedInput: {[key: number]: Tensor};\n  private resourceManager: ResourceManager;\n  private signature: tensorflow.ISignatureDef;\n  private initializerSignature: tensorflow.ISignatureDef;\n  private structuredOutputKeys: string[];\n  private readonly io: typeof io;\n\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  get metadata(): {} {\n    return this.artifacts.userDefinedMetadata;\n  }\n\n  get modelSignature(): {} {\n    return this.signature;\n  }\n\n  get modelStructuredOutputKeys(): {} {\n    return this.structuredOutputKeys;\n  }\n\n  /**\n   * @param modelUrl url for the model, or an `io.IOHandler`.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   * @param onProgress Optional, progress callback function, fired periodically\n   * before the load is completed.\n   */\n  constructor(\n      private modelUrl: ModelURL, private loadOptions: io.LoadOptions = {},\n      tfio = io) {\n    this.io = tfio;\n    if (loadOptions == null) {\n      this.loadOptions = {};\n    }\n    this.resourceManager = new ResourceManager();\n  }\n\n  private findIOHandler() {\n    type IOHandler = UrlIOHandler<ModelURL>;\n    const path = this.modelUrl;\n    if ((path as io.IOHandler).load != null) {\n      // Path is an IO Handler.\n      this.handler = path as IOHandler;\n    } else if (this.loadOptions.requestInit != null) {\n      this.handler = this.io.browserHTTPRequest(\n                         path as string, this.loadOptions) as IOHandler;\n    } else {\n      const handlers =\n          this.io.getLoadHandlers(path as string, this.loadOptions);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(\n            this.io.browserHTTPRequest(path as string, this.loadOptions));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0] as IOHandler;\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  load(): UrlIOHandler<ModelURL> extends io.IOHandlerSync? boolean:\n                                             Promise<boolean> {\n    type IOHandler = UrlIOHandler<ModelURL>;\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n\n    type Result =\n        IOHandler extends io.IOHandlerSync ? boolean : Promise<boolean>;\n\n    const loadResult = this.handler.load() as ReturnType<IOHandler['load']>;\n    if (util.isPromise(loadResult)) {\n      return loadResult.then(artifacts => this.loadSync(artifacts)) as Result;\n    }\n\n    return this.loadSync(loadResult) as Result;\n  }\n\n  /**\n   * Synchronously construct the in memory weight map and\n   * compile the inference graph.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  loadSync(artifacts: io.ModelArtifacts) {\n    this.artifacts = artifacts;\n    const graph = this.artifacts.modelTopology as tensorflow.IGraphDef;\n\n    let signature = this.artifacts.signature;\n    if (this.artifacts.userDefinedMetadata != null) {\n      const metadata = this.artifacts.userDefinedMetadata;\n      if (metadata.signature != null) {\n        signature = metadata.signature;\n      }\n\n      if (metadata.structuredOutputKeys != null) {\n        this.structuredOutputKeys = metadata.structuredOutputKeys as string[];\n      }\n    }\n    this.signature = signature;\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap = this.io.decodeWeights(\n        this.artifacts.weightData, this.artifacts.weightSpecs);\n    this.executor = new GraphExecutor(\n        OperationMapper.Instance.transformGraph(graph, this.signature));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    // Attach a model-level resourceManager to each executor to share resources,\n    // such as `HashTable`.\n    this.executor.resourceManager = this.resourceManager;\n\n    if (artifacts.modelInitializer != null &&\n        (artifacts.modelInitializer as tensorflow.IGraphDef).node != null) {\n      const initializer =\n          OperationMapper.Instance.transformGraph(artifacts.modelInitializer);\n      this.initializer = new GraphExecutor(initializer);\n      this.initializer.weightMap = this.executor.weightMap;\n      // Attach a model-level resourceManager to the initializer, the\n      // hashTables created from when executing the initializer will be stored\n      // in the resourceManager.\n      this.initializer.resourceManager = this.resourceManager;\n      this.initializerSignature = artifacts.initializerSignature;\n    }\n\n    return true;\n  }\n\n  /**\n   * Save the configuration and/or weights of the GraphModel.\n   *\n   * An `IOHandler` is an object that has a `save` method of the proper\n   * signature defined. The `save` method manages the storing or\n   * transmission of serialized data (\"artifacts\") that represent the\n   * model's topology and weights onto or via a specific medium, such as\n   * file downloads, local storage, IndexedDB in the web browser and HTTP\n   * requests to a server. TensorFlow.js provides `IOHandler`\n   * implementations for a number of frequently used saving mediums, such as\n   * `tf.io.browserDownloads` and `tf.io.browserLocalStorage`. See `tf.io`\n   * for more details.\n   *\n   * This method also allows you to refer to certain types of `IOHandler`s\n   * as URL-like string shortcuts, such as 'localstorage://' and\n   * 'indexeddb://'.\n   *\n   * Example 1: Save `model`'s topology and weights to browser [local\n   * storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage);\n   * then load it back.\n   *\n   * ```js\n   * const modelUrl =\n   *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n   * const model = await tf.loadGraphModel(modelUrl);\n   * const zeros = tf.zeros([1, 224, 224, 3]);\n   * model.predict(zeros).print();\n   *\n   * const saveResults = await model.save('localstorage://my-model-1');\n   *\n   * const loadedModel = await tf.loadGraphModel('localstorage://my-model-1');\n   * console.log('Prediction from loaded model:');\n   * model.predict(zeros).print();\n   * ```\n   *\n   * @param handlerOrURL An instance of `IOHandler` or a URL-like,\n   * scheme-based string shortcut for `IOHandler`.\n   * @param config Options for saving the model.\n   * @returns A `Promise` of `SaveResult`, which summarizes the result of\n   * the saving, such as byte sizes of the saved artifacts for the model's\n   *   topology and weight values.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes', ignoreCI: true}\n   */\n  async save(handlerOrURL: io.IOHandler|string, config?: io.SaveConfig):\n      Promise<io.SaveResult> {\n    if (typeof handlerOrURL === 'string') {\n      const handlers = this.io.getSaveHandlers(handlerOrURL);\n      if (handlers.length === 0) {\n        throw new Error(\n            `Cannot find any save handlers for URL '${handlerOrURL}'`);\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) save handlers for ` +\n            `URL '${handlerOrURL}'`);\n      }\n      handlerOrURL = handlers[0];\n    }\n    if (handlerOrURL.save == null) {\n      throw new Error(\n          'GraphModel.save() cannot proceed because the IOHandler ' +\n          'provided does not have the `save` attribute defined.');\n    }\n\n    return handlerOrURL.save(this.artifacts);\n  }\n\n  private addStructuredOutputNames(outputTensors: Tensor|Tensor[]) {\n    if (this.structuredOutputKeys) {\n      const outputTensorsArray =\n          outputTensors instanceof Tensor ? [outputTensors] : outputTensors;\n      const outputTensorMap: NamedTensorMap = {};\n\n      outputTensorsArray.forEach(\n          (outputTensor, i) => outputTensorMap[this.structuredOutputKeys[i]] =\n              outputTensor);\n\n      return outputTensorMap;\n    }\n    return outputTensors;\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link GraphModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    model.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size.\n   * Currently the batch size option is ignored for graph model.\n   *\n   * @returns Inference result tensors. If the model is converted and it\n   * originally had structured_outputs in tensorflow, then a NamedTensorMap\n   * will be returned matching the structured_outputs. If no structured_outputs\n   * are present, the output will be single `tf.Tensor` if the model has single\n   * output node, otherwise Tensor[].\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  predict(inputs: Tensor|Tensor[]|NamedTensorMap, config?: ModelPredictConfig):\n      Tensor|Tensor[]|NamedTensorMap {\n    const outputTensors = this.execute(inputs, this.outputNodes);\n    return this.addStructuredOutputNames(outputTensors);\n  }\n\n  /**\n   * Execute the inference for the input tensors in async fashion, use this\n   * method when your model contains control flow ops.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link GraphModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    model.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size.\n   * Currently the batch size option is ignored for graph model.\n   *\n   * @returns A Promise of inference result tensors. If the model is converted\n   * and it originally had structured_outputs in tensorflow, then a\n   * NamedTensorMap will be returned matching the structured_outputs. If no\n   * structured_outputs are present, the output will be single `tf.Tensor` if\n   * the model has single output node, otherwise Tensor[].\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async predictAsync(\n      inputs: Tensor|Tensor[]|NamedTensorMap,\n      config?: ModelPredictConfig): Promise<Tensor|Tensor[]|NamedTensorMap> {\n    const outputTensors = await this.executeAsync(inputs, this.outputNodes);\n    return this.addStructuredOutputNames(outputTensors);\n  }\n\n  private normalizeInputs(inputs: Tensor|Tensor[]|\n                          NamedTensorMap): NamedTensorMap {\n    if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n      // The input is already a NamedTensorMap.\n      const signatureInputs = this.signature?.inputs;\n      if (signatureInputs != null) {\n        for (const input in signatureInputs) {\n          const tensor = signatureInputs[input];\n          if (tensor.resourceId != null) {\n            inputs[input] = this.resourceIdToCapturedInput[tensor.resourceId];\n          }\n        }\n      }\n      return inputs;\n    }\n    inputs = Array.isArray(inputs) ? inputs : [inputs];\n\n    const numCapturedInputs =\n        Object.keys(this.resourceIdToCapturedInput).length;\n    if (inputs.length + numCapturedInputs !== this.inputNodes.length) {\n      throw new Error(`Input tensor count mismatch, the graph model has ${\n          this.inputNodes.length -\n          numCapturedInputs} non-resource placeholders, while there are ${\n          inputs.length} input tensors provided.`);\n    }\n\n    let inputIndex = 0;\n    return this.inputNodes.reduce((map, inputName) => {\n      const resourceId = this.signature?.inputs?.[inputName]?.resourceId;\n      if (resourceId != null) {\n        map[inputName] = this.resourceIdToCapturedInput[resourceId];\n      } else {\n        map[inputName] = (inputs as Tensor[])[inputIndex++];\n      }\n      return map;\n    }, {} as NamedTensorMap);\n  }\n\n  private normalizeOutputs(outputs: string|string[]): string[] {\n    outputs = outputs || this.outputNodes;\n    return !Array.isArray(outputs) ? [outputs] : outputs;\n  }\n\n  private executeInitializerGraph() {\n    if (this.initializer == null) {\n      return [];\n    }\n    if (this.initializerSignature == null) {\n      return this.initializer.execute({}, []);\n    } else {\n      return this.initializer.execute(\n          {}, Object.keys(this.initializerSignature.outputs));\n    }\n  }\n\n  private async executeInitializerGraphAsync() {\n    if (this.initializer == null) {\n      return [];\n    }\n    if (this.initializerSignature == null) {\n      return this.initializer.executeAsync({}, []);\n    } else {\n      return this.initializer.executeAsync(\n          {}, Object.keys(this.initializerSignature.outputs));\n    }\n  }\n\n  private setResourceIdToCapturedInput(outputs: Tensor[]) {\n    this.resourceIdToCapturedInput = {};\n\n    if (this.initializerSignature) {\n      const signatureOutputs = this.initializerSignature.outputs;\n      const outputNames = Object.keys(signatureOutputs);\n      for (let i = 0; i < outputNames.length; i++) {\n        const outputName = outputNames[i];\n        const tensorInfo = signatureOutputs[outputName];\n        this.resourceIdToCapturedInput[tensorInfo.resourceId] = outputs[i];\n      }\n    }\n  }\n\n  /**\n   * Executes inference for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the TensorFlow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  execute(inputs: Tensor|Tensor[]|NamedTensorMap, outputs?: string|string[]):\n      Tensor|Tensor[] {\n    if (this.resourceIdToCapturedInput == null) {\n      this.setResourceIdToCapturedInput(this.executeInitializerGraph());\n    }\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = this.executor.execute(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the TensorFlow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  async executeAsync(\n      inputs: Tensor|Tensor[]|NamedTensorMap,\n      outputs?: string|string[]): Promise<Tensor|Tensor[]> {\n    if (this.resourceIdToCapturedInput == null) {\n      this.setResourceIdToCapturedInput(\n          await this.executeInitializerGraphAsync());\n    }\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = await this.executor.executeAsync(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n\n  /**\n   * Get intermediate tensors for model debugging mode (flag\n   * KEEP_INTERMEDIATE_TENSORS is true).\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  getIntermediateTensors(): NamedTensorsMap {\n    return this.executor.getIntermediateTensors();\n  }\n\n  /**\n   * Dispose intermediate tensors for model debugging mode (flag\n   * KEEP_INTERMEDIATE_TENSORS is true).\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  disposeIntermediateTensors() {\n    this.executor.disposeIntermediateTensors();\n  }\n\n  private convertTensorMapToTensorsMap(map: NamedTensorMap): NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n\n  /**\n   * Releases the memory used by the weight tensors and resourceManager.\n   *\n   * @doc {heading: 'Models', subheading: 'Classes'}\n   */\n  dispose() {\n    this.executor.dispose();\n\n    if (this.initializer) {\n      this.initializer.dispose();\n      if (this.resourceIdToCapturedInput) {\n        dispose(this.resourceIdToCapturedInput);\n      }\n    }\n\n    this.resourceManager.dispose();\n  }\n}\n\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction\n * with a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send\n *     credentials\n *    and custom headers.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport async function loadGraphModel(\n    modelUrl: string|io.IOHandler, options: io.LoadOptions = {},\n    tfio = io): Promise<GraphModel> {\n  if (modelUrl == null) {\n    throw new Error(\n        'modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n        'or an IOHandler that loads the model');\n  }\n  if (options == null) {\n    options = {};\n  }\n\n  if (options.fromTFHub && typeof modelUrl === 'string') {\n    modelUrl = getTFHubUrl(modelUrl);\n  }\n  const model = new GraphModel(modelUrl, options, tfio);\n  await model.load();\n  return model;\n}\n\n/**\n * Load a graph model given a synchronous IO handler with a 'load' method.\n *\n * @param modelSource The `io.IOHandlerSync` that loads the model, or the\n *     `io.ModelArtifacts` that encode the model, or a tuple of\n *     `[io.ModelJSON, ArrayBuffer]` of which the first element encodes the\n *      model and the second contains the weights.\n *\n * @doc {heading: 'Models', subheading: 'Loading'}\n */\nexport function loadGraphModelSync(\n    modelSource: io.IOHandlerSync|\n    io.ModelArtifacts|[io.ModelJSON, /* Weights */ ArrayBuffer]):\n    GraphModel<io.IOHandlerSync> {\n  if (modelSource == null) {\n    throw new Error(\n        'modelUrl in loadGraphModelSync() cannot be null. Please provide ' +\n        'model artifacts or an IOHandler that loads the model');\n  }\n\n  let ioHandler: io.IOHandlerSync;\n  if (modelSource instanceof Array) {\n    const [modelJSON, weights] = modelSource;\n    if (!modelJSON) {\n      throw new Error('modelJSON must be the first element of the array');\n    }\n    if (!weights || !(weights instanceof ArrayBuffer)) {\n      throw new Error(\n          'An ArrayBuffer of weights must be the second element of' +\n          ' the array');\n    }\n    if (!('modelTopology' in modelJSON)) {\n      throw new Error('Model JSON is missing \\'modelTopology\\'');\n    }\n    if (!('weightsManifest' in modelJSON)) {\n      throw new Error('Model JSON is missing \\'weightsManifest\\'');\n    }\n\n    const weightSpecs = io.getWeightSpecs(modelJSON.weightsManifest);\n    const modelArtifacts =\n        io.getModelArtifactsForJSONSync(modelJSON, weightSpecs, weights);\n    ioHandler = io.fromMemorySync(modelArtifacts);\n  } else if ('load' in modelSource) {\n    // Then modelSource is already an IOHandlerSync.\n    ioHandler = modelSource;\n  } else if (\n      'modelTopology' in modelSource && 'weightSpecs' in modelSource &&\n      'weightData' in modelSource) {\n    // modelSource is of type ModelArtifacts.\n    ioHandler = io.fromMemorySync(modelSource);\n  } else {\n    throw new Error('Unknown model format');\n  }\n\n  const model = new GraphModel(ioHandler);\n  model.load();\n  return model;\n}\n\nfunction getTFHubUrl(modelUrl: string): string {\n  if (!modelUrl.endsWith('/')) {\n    modelUrl = (modelUrl) + '/';\n  }\n  return `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '4.10.0';\nexport {version};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport './flags';\n\nexport {IAttrValue, INameAttrList, INodeDef, ITensor, ITensorShape} from './data/compiled_api';\nexport {GraphModel, loadGraphModel, loadGraphModelSync} from './executor/graph_model';\nexport {deregisterOp, registerOp} from './operations/custom_op/register';\nexport {GraphNode, OpExecutor} from './operations/types';\nexport {version as version_converter} from './version';\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]}